DIGEST 87a602e0535e812b263e7053539e1f71
FProject.Com
R84:96 mathcomp.ssreflect.all_ssreflect <> <> lib
R98:108 mathcomp.algebra.all_algebra <> <> lib
R110:114 mathcomp.analysis.reals <> <> lib
R116:120 mathcomp.analysis.altreals.distr <> <> lib
R122:128 mathcomp.analysis.altreals.realsum <> <> lib
R132:148 mathcomp.fingroup.fingroup <> <> lib
R150:164 mathcomp.solvable.cyclic <> <> lib
R166:170 mathcomp.ssreflect.prime <> <> lib
R172:177 mathcomp.ssreflect.ssrnat <> <> lib
R179:187 mathcomp.ssreflect.ssreflect <> <> lib
R189:194 mathcomp.ssreflect.ssrfun <> <> lib
R196:202 mathcomp.ssreflect.ssrbool <> <> lib
R204:209 mathcomp.algebra.ssrnum <> <> lib
R213:218 mathcomp.ssreflect.eqtype <> <> lib
R220:225 mathcomp.ssreflect.choice <> <> lib
R227:229 mathcomp.ssreflect.seq <> <> lib
R309:312 Coq.Unicode.Utf8 <> <> lib
R347:349 extructures.ord <> <> lib
R351:354 extructures.fset <> <> lib
R356:359 extructures.fmap <> <> lib
R393:401 Equations.Prop.Equations <> <> lib
R412:433 Equations.Prop.DepElim <> <> lib
R592:600 NominalSSP.FsetSolve <> <> lib
R602:606 NominalSSP.Example.Sigma.Group <> <> lib
R608:614 NominalSSP.SSProve <> <> lib
R616:622 NominalSSP.Nominal <> <> lib
R624:633 NominalSSP.NomPackage <> <> lib
R635:642 NominalSSP.Disjoint <> <> lib
R644:650 NominalSSP.Prelude <> <> lib
R652:656 NominalSSP.Example.Sigma.Sigma <> <> lib
R658:667 NominalSSP.Example.PK.Reductions <> <> lib
R677:683 mathcomp.algebra.ssrnum Num.Def <> mod
R685:694 mathcomp.algebra.ssrnum Num.Theory <> mod
R696:713 mathcomp.ssreflect.order Order.POrderTheory <> mod
R723:737 Crypt.package.pkg_notation PackageNotation <> mod
rec 781:787 <> raw_com
proj 797:799 <> Key
proj 819:823 <> Value
proj 843:852 <> Commitment
proj 873:879 <> Opening
proj 900:904 <> setup
proj 949:954 <> commit
proj 1049:1054 <> verify
proj 1160:1170 <> sampl_value
R803:813 Crypt.choice_type <> choice_type ind
R827:837 Crypt.choice_type <> choice_type ind
R856:866 Crypt.choice_type <> choice_type ind
R883:893 Crypt.choice_type <> choice_type ind
R915:918 Crypt.package.pkg_core_definition <> code rec
R940:942 Project.Com <> Key:2 meth
R928:938 Crypt.package.pkg_notation PackageNotation ::package_scope:'['_'interface'_']' not
R920:926 NominalSSP.NomPackage <> no_locs abbrev
R962:966 Coq.Unicode.Utf8_core <> ::type_scope:'∀'_x_'..'_x_','_x not
R986:994 Coq.Unicode.Utf8_core <> ::type_scope:'∀'_x_'..'_x_','_x not
R971:973 Project.Com <> Key:2 meth
binder 967:967 <> k:7
R981:985 Project.Com <> Value:3 meth
binder 977:977 <> u:8
R995:998 Crypt.package.pkg_core_definition <> code rec
R1031:1034 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'×'_x not
R1021:1030 Project.Com <> Commitment:4 meth
R1035:1041 Project.Com <> Opening:5 meth
R1008:1018 Crypt.package.pkg_notation PackageNotation ::package_scope:'['_'interface'_']' not
R1000:1006 NominalSSP.NomPackage <> no_locs abbrev
R1062:1066 Coq.Unicode.Utf8_core <> ::type_scope:'∀'_x_'..'_x_','_x not
R1116:1124 Coq.Unicode.Utf8_core <> ::type_scope:'∀'_x_'..'_x_','_x not
R1071:1073 Project.Com <> Key:2 meth
binder 1067:1067 <> k:10
R1081:1090 Project.Com <> Commitment:4 meth
binder 1077:1077 <> c:11
R1097:1101 Project.Com <> Value:3 meth
binder 1094:1094 <> v:12
R1109:1115 Project.Com <> Opening:5 meth
binder 1105:1105 <> d:13
R1125:1128 Crypt.package.pkg_core_definition <> code rec
R1150:1153 Coq.Init.Datatypes <> bool ind
R1138:1148 Crypt.package.pkg_notation PackageNotation ::package_scope:'['_'interface'_']' not
R1130:1136 NominalSSP.NomPackage <> no_locs abbrev
R1181:1184 Crypt.package.pkg_core_definition <> code rec
R1206:1210 Project.Com <> Value:3 meth
R1194:1204 Crypt.package.pkg_notation PackageNotation ::package_scope:'['_'interface'_']' not
R1186:1192 NominalSSP.NomPackage <> no_locs abbrev
R1281:1283 Project.Com <> Key proj
not 1266:1266 <> :pack_type::'''key'_x
R1373:1377 Project.Com <> Value proj
not 1356:1356 <> :pack_type::'''value'_x
R1472:1481 Project.Com <> Commitment proj
not 1450:1450 <> :pack_type::'''commitment'_x
R1573:1579 Project.Com <> Opening proj
not 1554:1554 <> :pack_type::'''opening'_x
R1667:1669 Project.Com <> Key proj
not 1652:1652 <> ::package_scope:'''key'_x
R1733:1737 Project.Com <> Value proj
not 1716:1716 <> ::package_scope:'''value'_x
R1806:1815 Project.Com <> Commitment proj
not 1784:1784 <> ::package_scope:'''commitment'_x
R1881:1887 Project.Com <> Opening proj
not 1862:1862 <> ::package_scope:'''opening'_x
def 1966:1976 <> CORRECTNESS
def 1998:2009 <> ICorrect_com
binder 2011:2011 <> p:16
R2016:2026 Crypt.package.pkg_notation PackageNotation ::package_scope:'['_'interface'_x_']' not
R2073:2074 Crypt.package.pkg_notation PackageNotation ::package_scope:'['_'interface'_x_']' not
R2027:2034 Crypt.package.pkg_notation PackageNotation :interface::'#val'_'#['_x_']'_':'_x_'→'_x not
R2046:2050 Crypt.package.pkg_notation PackageNotation :interface::'#val'_'#['_x_']'_':'_x_'→'_x not
R2061:2065 Crypt.package.pkg_notation PackageNotation :interface::'#val'_'#['_x_']'_':'_x_'→'_x not
R2035:2045 Project.Com <> CORRECTNESS def
R2051:2051 Crypt.package.pkg_notation PackageNotation :pack_type::'('_x_')' not
R2060:2060 Crypt.package.pkg_notation PackageNotation :pack_type::'('_x_')' not
R2052:2058 Project.Com <> :pack_type::'''value'_x not
R2059:2059 Project.Com <> p:16 var
R2066:2066 Crypt.package.pkg_notation PackageNotation :pack_type::'('_x_')' not
R2072:2072 Crypt.package.pkg_notation PackageNotation :pack_type::'('_x_')' not
R2067:2071 Crypt.package.pkg_notation PackageNotation :pack_type::'''bool' not
def 2093:2104 <> Correct_real
binder 2106:2106 <> p:17
R2119:2122 NominalSSP.NomPackage <> game abbrev
R2125:2136 Project.Com <> ICorrect_com def
R2138:2138 Project.Com <> p:17 var
R2152:2159 NominalSSP.NomPackage <> ::package_scope:'['_'module'_x_';'_x_']' not
R2167:2180 NominalSSP.NomPackage <> ::package_scope:'['_'module'_x_';'_x_']' not
R2396:2405 NominalSSP.NomPackage <> ::package_scope:'['_'module'_x_';'_x_']' not
R2160:2166 NominalSSP.NomPackage <> no_locs abbrev
R2181:2188 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_x_':'_x_')'_':'_x_'{'_x_'}' not
R2200:2203 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_x_':'_x_')'_':'_x_'{'_x_'}' not
R2205:2207 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_x_':'_x_')'_':'_x_'{'_x_'}' not
R2216:2219 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_x_':'_x_')'_':'_x_'{'_x_'}' not
R2227:2256 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_x_':'_x_')'_':'_x_'{'_x_'}' not
R2381:2395 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_x_':'_x_')'_':'_x_'{'_x_'}' not
R2189:2199 Project.Com <> CORRECTNESS def
R2208:2214 Project.Com <> :pack_type::'''value'_x not
R2215:2215 Project.Com <> p:17 var
R2220:2220 Crypt.package.pkg_notation PackageNotation :pack_type::'('_x_')' not
R2226:2226 Crypt.package.pkg_notation PackageNotation :pack_type::'('_x_')' not
R2221:2225 Crypt.package.pkg_notation PackageNotation :pack_type::'''bool' not
binder 2204:2204 <> v:18
R2258:2262 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R2272:2289 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R2266:2270 Project.Com <> setup proj
R2263:2263 Project.Com <> p:17 var
binder 2257:2257 <> k:19
R2290:2290 Crypt.package.pkg_notation PackageNotation ::package_scope:''''_x_'←'_x_';;'_x not
R2297:2301 Crypt.package.pkg_notation PackageNotation ::package_scope:''''_x_'←'_x_';;'_x not
R2316:2333 Crypt.package.pkg_notation PackageNotation ::package_scope:''''_x_'←'_x_';;'_x not
R2305:2310 Project.Com <> commit proj
R2302:2302 Project.Com <> p:17 var
R2313:2313 Project.Com <> k:19 var
R2315:2315 Project.Com <> v:18 var
R2291:2291 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2293:2294 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2296:2296 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
binder 2295:2295 <> o:20
binder 2292:2292 <> c:21
binder 2291:2296 <> pat:22
R2335:2339 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R2358:2375 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R2343:2348 Project.Com <> verify proj
R2340:2340 Project.Com <> p:17 var
R2351:2351 Project.Com <> k:19 var
R2353:2353 Project.Com <> c:21 var
R2355:2355 Project.Com <> v:18 var
R2357:2357 Project.Com <> o:20 var
binder 2334:2334 <> b:23
R2376:2378 Crypt.package.pkg_core_definition <> ret constr
R2380:2380 Project.Com <> b:23 var
R2160:2166 NominalSSP.NomPackage <> no_locs abbrev
R2181:2188 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_x_':'_x_')'_':'_x_'{'_x_'}' not
R2200:2203 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_x_':'_x_')'_':'_x_'{'_x_'}' not
R2205:2207 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_x_':'_x_')'_':'_x_'{'_x_'}' not
R2216:2219 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_x_':'_x_')'_':'_x_'{'_x_'}' not
R2227:2256 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_x_':'_x_')'_':'_x_'{'_x_'}' not
R2381:2395 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_x_':'_x_')'_':'_x_'{'_x_'}' not
R2189:2199 Project.Com <> CORRECTNESS def
R2208:2214 Project.Com <> :pack_type::'''value'_x not
R2215:2215 Project.Com <> p:17 var
R2220:2220 Crypt.package.pkg_notation PackageNotation :pack_type::'('_x_')' not
R2226:2226 Crypt.package.pkg_notation PackageNotation :pack_type::'('_x_')' not
R2221:2225 Crypt.package.pkg_notation PackageNotation :pack_type::'''bool' not
binder 2204:2204 <> v:24
R2258:2262 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R2272:2289 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R2266:2270 Project.Com <> setup proj
R2263:2263 Project.Com <> p:17 var
binder 2257:2257 <> k:25
R2290:2290 Crypt.package.pkg_notation PackageNotation ::package_scope:''''_x_'←'_x_';;'_x not
R2297:2301 Crypt.package.pkg_notation PackageNotation ::package_scope:''''_x_'←'_x_';;'_x not
R2316:2333 Crypt.package.pkg_notation PackageNotation ::package_scope:''''_x_'←'_x_';;'_x not
R2305:2310 Project.Com <> commit proj
R2302:2302 Project.Com <> p:17 var
R2313:2313 Project.Com <> k:25 var
R2315:2315 Project.Com <> v:24 var
R2291:2291 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2293:2294 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2296:2296 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
binder 2295:2295 <> o:26
binder 2292:2292 <> c:27
binder 2291:2296 <> pat:28
R2335:2339 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R2358:2375 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R2343:2348 Project.Com <> verify proj
R2340:2340 Project.Com <> p:17 var
R2351:2351 Project.Com <> k:25 var
R2353:2353 Project.Com <> c:27 var
R2355:2355 Project.Com <> v:24 var
R2357:2357 Project.Com <> o:26 var
binder 2334:2334 <> b:29
R2376:2378 Crypt.package.pkg_core_definition <> ret constr
R2380:2380 Project.Com <> b:29 var
def 2425:2437 <> Correct_ideal
binder 2439:2439 <> p:30
R2452:2455 NominalSSP.NomPackage <> game abbrev
R2458:2469 Project.Com <> ICorrect_com def
R2471:2471 Project.Com <> p:30 var
R2485:2492 NominalSSP.NomPackage <> ::package_scope:'['_'module'_x_';'_x_']' not
R2500:2513 NominalSSP.NomPackage <> ::package_scope:'['_'module'_x_';'_x_']' not
R2645:2654 NominalSSP.NomPackage <> ::package_scope:'['_'module'_x_';'_x_']' not
R2493:2499 NominalSSP.NomPackage <> no_locs abbrev
R2514:2521 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_x_':'_x_')'_':'_x_'{'_x_'}' not
R2533:2536 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_x_':'_x_')'_':'_x_'{'_x_'}' not
R2538:2540 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_x_':'_x_')'_':'_x_'{'_x_'}' not
R2549:2552 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_x_':'_x_')'_':'_x_'{'_x_'}' not
R2560:2589 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_x_':'_x_')'_':'_x_'{'_x_'}' not
R2631:2644 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_x_':'_x_')'_':'_x_'{'_x_'}' not
R2522:2532 Project.Com <> CORRECTNESS def
R2541:2547 Project.Com <> :pack_type::'''value'_x not
R2548:2548 Project.Com <> p:30 var
R2553:2553 Crypt.package.pkg_notation PackageNotation :pack_type::'('_x_')' not
R2559:2559 Crypt.package.pkg_notation PackageNotation :pack_type::'('_x_')' not
R2554:2558 Crypt.package.pkg_notation PackageNotation :pack_type::'''bool' not
binder 2537:2537 <> v:31
R2591:2595 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R2605:2622 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R2599:2603 Project.Com <> setup proj
R2596:2596 Project.Com <> p:30 var
binder 2590:2590 <> k:32
R2623:2625 Crypt.package.pkg_core_definition <> ret constr
R2627:2630 Coq.Init.Datatypes <> true constr
R2493:2499 NominalSSP.NomPackage <> no_locs abbrev
R2514:2521 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_x_':'_x_')'_':'_x_'{'_x_'}' not
R2533:2536 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_x_':'_x_')'_':'_x_'{'_x_'}' not
R2538:2540 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_x_':'_x_')'_':'_x_'{'_x_'}' not
R2549:2552 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_x_':'_x_')'_':'_x_'{'_x_'}' not
R2560:2589 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_x_':'_x_')'_':'_x_'{'_x_'}' not
R2631:2644 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_x_':'_x_')'_':'_x_'{'_x_'}' not
R2522:2532 Project.Com <> CORRECTNESS def
R2541:2547 Project.Com <> :pack_type::'''value'_x not
R2548:2548 Project.Com <> p:30 var
R2553:2553 Crypt.package.pkg_notation PackageNotation :pack_type::'('_x_')' not
R2559:2559 Crypt.package.pkg_notation PackageNotation :pack_type::'('_x_')' not
R2554:2558 Crypt.package.pkg_notation PackageNotation :pack_type::'''bool' not
binder 2537:2537 <> v:33
R2591:2595 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R2605:2622 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R2599:2603 Project.Com <> setup proj
R2596:2596 Project.Com <> p:30 var
binder 2590:2590 <> k:34
R2623:2625 Crypt.package.pkg_core_definition <> ret constr
R2627:2630 Coq.Init.Datatypes <> true constr
def 2669:2675 <> Correct
binder 2677:2677 <> p:35
binder 2679:2679 <> b:36
R2686:2688 Coq.ssr.ssreflect <> ::boolean_if_scope:'if'_x_'then'_x_'else'_x not
R2690:2695 Coq.ssr.ssreflect <> ::boolean_if_scope:'if'_x_'then'_x_'else'_x not
R2710:2715 Coq.ssr.ssreflect <> ::boolean_if_scope:'if'_x_'then'_x_'else'_x not
R2689:2689 Project.Com <> b:36 var
R2696:2707 Project.Com <> Correct_real def
R2709:2709 Project.Com <> p:35 var
R2716:2728 Project.Com <> Correct_ideal def
R2730:2730 Project.Com <> p:35 var
def 2746:2756 <> Adv_Correct
binder 2758:2758 <> p:37
R2792:2796 Coq.Unicode.Utf8_core <> ::type_scope:x_'→'_x not
R2766:2774 NominalSSP.NomPackage <> adversary abbrev
R2777:2788 Project.Com <> ICorrect_com def
R2790:2790 Project.Com <> p:37 var
R2797:2804 Crypt.Axioms <> R defax
binder 2761:2762 <> ε:38
R2812:2815 Coq.Unicode.Utf8_core <> ::type_scope:'∀'_x_'..'_x_','_x not
R2846:2847 Coq.Unicode.Utf8_core <> ::type_scope:'∀'_x_'..'_x_','_x not
R2820:2828 NominalSSP.NomPackage <> adversary abbrev
R2831:2842 Project.Com <> ICorrect_com def
R2844:2844 Project.Com <> p:37 var
binder 2816:2816 <> A:39
R2868:2871 mathcomp.algebra.ssrnum Num.Syntax ::ring_scope:x_'<='_x not
R2848:2853 NominalSSP.Disjoint <> AdvFor def
R2856:2862 Project.Com <> Correct def
R2864:2864 Project.Com <> p:37 var
R2867:2867 Project.Com <> A:39 var
R2872:2873 Project.Com <> ε:38 var
R2875:2875 Project.Com <> A:39 var
def 2917:2926 <> COMMITMENT
def 2948:2958 <> ICommitment
binder 2960:2960 <> p:40
R2965:2975 Crypt.package.pkg_notation PackageNotation ::package_scope:'['_'interface'_x_']' not
R3027:3028 Crypt.package.pkg_notation PackageNotation ::package_scope:'['_'interface'_x_']' not
R2976:2983 Crypt.package.pkg_notation PackageNotation :interface::'#val'_'#['_x_']'_':'_x_'→'_x not
R2994:2998 Crypt.package.pkg_notation PackageNotation :interface::'#val'_'#['_x_']'_':'_x_'→'_x not
R3009:3013 Crypt.package.pkg_notation PackageNotation :interface::'#val'_'#['_x_']'_':'_x_'→'_x not
R2984:2993 Project.Com <> COMMITMENT def
R2999:2999 Crypt.package.pkg_notation PackageNotation :pack_type::'('_x_')' not
R3008:3008 Crypt.package.pkg_notation PackageNotation :pack_type::'('_x_')' not
R3000:3006 Project.Com <> :pack_type::'''value'_x not
R3007:3007 Project.Com <> p:40 var
R3014:3025 Project.Com <> :pack_type::'''commitment'_x not
R3026:3026 Project.Com <> p:40 var
def 3047:3057 <> Hiding_real
binder 3059:3059 <> p:41
R3072:3075 NominalSSP.NomPackage <> game abbrev
R3078:3088 Project.Com <> ICommitment def
R3090:3090 Project.Com <> p:41 var
R3105:3112 NominalSSP.NomPackage <> ::package_scope:'['_'module'_x_';'_x_']' not
R3120:3133 NominalSSP.NomPackage <> ::package_scope:'['_'module'_x_';'_x_']' not
R3369:3378 NominalSSP.NomPackage <> ::package_scope:'['_'module'_x_';'_x_']' not
R3113:3119 NominalSSP.NomPackage <> no_locs abbrev
R3134:3141 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_x_':'_x_')'_':'_x_'{'_x_'}' not
R3152:3155 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_x_':'_x_')'_':'_x_'{'_x_'}' not
R3157:3159 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_x_':'_x_')'_':'_x_'{'_x_'}' not
R3168:3171 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_x_':'_x_')'_':'_x_'{'_x_'}' not
R3187:3215 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_x_':'_x_')'_':'_x_'{'_x_'}' not
R3354:3368 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_x_':'_x_')'_':'_x_'{'_x_'}' not
R3142:3151 Project.Com <> COMMITMENT def
R3160:3166 Project.Com <> :pack_type::'''value'_x not
R3167:3167 Project.Com <> p:41 var
R3172:3172 Crypt.package.pkg_notation PackageNotation :pack_type::'('_x_')' not
R3186:3186 Crypt.package.pkg_notation PackageNotation :pack_type::'('_x_')' not
R3173:3184 Project.Com <> :pack_type::'''commitment'_x not
R3185:3185 Project.Com <> p:41 var
binder 3156:3156 <> v:42
R3217:3221 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R3231:3248 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R3225:3229 Project.Com <> setup proj
R3222:3222 Project.Com <> p:41 var
binder 3216:3216 <> k:43
R3250:3254 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R3270:3287 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R3258:3268 Project.Com <> sampl_value proj
R3255:3255 Project.Com <> p:41 var
R3288:3288 Crypt.package.pkg_notation PackageNotation ::package_scope:''''_x_'←'_x_';;'_x not
R3295:3299 Crypt.package.pkg_notation PackageNotation ::package_scope:''''_x_'←'_x_';;'_x not
R3314:3331 Crypt.package.pkg_notation PackageNotation ::package_scope:''''_x_'←'_x_';;'_x not
R3303:3308 Project.Com <> commit proj
R3300:3300 Project.Com <> p:41 var
R3311:3311 Project.Com <> k:43 var
R3313:3313 Project.Com <> v:42 var
R3289:3289 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3291:3292 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3294:3294 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
binder 3293:3293 <> o:44
binder 3290:3290 <> c:45
binder 3289:3294 <> pat:46
R3333:3335 Crypt.package.pkg_core_definition <> ret constr
R3338:3349 Project.Com <> ::package_scope:'''commitment'_x not
R3350:3350 Project.Com <> p:41 var
R3353:3353 Project.Com <> c:45 var
R3113:3119 NominalSSP.NomPackage <> no_locs abbrev
R3134:3141 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_x_':'_x_')'_':'_x_'{'_x_'}' not
R3152:3155 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_x_':'_x_')'_':'_x_'{'_x_'}' not
R3157:3159 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_x_':'_x_')'_':'_x_'{'_x_'}' not
R3168:3171 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_x_':'_x_')'_':'_x_'{'_x_'}' not
R3187:3215 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_x_':'_x_')'_':'_x_'{'_x_'}' not
R3354:3368 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_x_':'_x_')'_':'_x_'{'_x_'}' not
R3142:3151 Project.Com <> COMMITMENT def
R3160:3166 Project.Com <> :pack_type::'''value'_x not
R3167:3167 Project.Com <> p:41 var
R3172:3172 Crypt.package.pkg_notation PackageNotation :pack_type::'('_x_')' not
R3186:3186 Crypt.package.pkg_notation PackageNotation :pack_type::'('_x_')' not
R3173:3184 Project.Com <> :pack_type::'''commitment'_x not
R3185:3185 Project.Com <> p:41 var
binder 3156:3156 <> v:47
R3217:3221 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R3231:3248 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R3225:3229 Project.Com <> setup proj
R3222:3222 Project.Com <> p:41 var
binder 3216:3216 <> k:48
R3250:3254 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R3270:3287 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R3258:3268 Project.Com <> sampl_value proj
R3255:3255 Project.Com <> p:41 var
R3288:3288 Crypt.package.pkg_notation PackageNotation ::package_scope:''''_x_'←'_x_';;'_x not
R3295:3299 Crypt.package.pkg_notation PackageNotation ::package_scope:''''_x_'←'_x_';;'_x not
R3314:3331 Crypt.package.pkg_notation PackageNotation ::package_scope:''''_x_'←'_x_';;'_x not
R3303:3308 Project.Com <> commit proj
R3300:3300 Project.Com <> p:41 var
R3311:3311 Project.Com <> k:48 var
R3313:3313 Project.Com <> v:47 var
R3289:3289 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3291:3292 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3294:3294 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
binder 3293:3293 <> o:49
binder 3290:3290 <> c:50
binder 3289:3294 <> pat:51
R3333:3335 Crypt.package.pkg_core_definition <> ret constr
R3338:3349 Project.Com <> ::package_scope:'''commitment'_x not
R3350:3350 Project.Com <> p:41 var
R3353:3353 Project.Com <> c:50 var
def 3397:3408 <> Hiding_ideal
binder 3410:3410 <> p:52
R3423:3426 NominalSSP.NomPackage <> game abbrev
R3429:3439 Project.Com <> ICommitment def
R3441:3441 Project.Com <> p:52 var
R3456:3463 NominalSSP.NomPackage <> ::package_scope:'['_'module'_x_';'_x_']' not
R3471:3485 NominalSSP.NomPackage <> ::package_scope:'['_'module'_x_';'_x_']' not
R3732:3741 NominalSSP.NomPackage <> ::package_scope:'['_'module'_x_';'_x_']' not
R3464:3470 NominalSSP.NomPackage <> no_locs abbrev
R3486:3493 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_x_':'_x_')'_':'_x_'{'_x_'}' not
R3504:3507 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_x_':'_x_')'_':'_x_'{'_x_'}' not
R3509:3511 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_x_':'_x_')'_':'_x_'{'_x_'}' not
R3520:3523 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_x_':'_x_')'_':'_x_'{'_x_'}' not
R3539:3567 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_x_':'_x_')'_':'_x_'{'_x_'}' not
R3717:3731 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_x_':'_x_')'_':'_x_'{'_x_'}' not
R3494:3503 Project.Com <> COMMITMENT def
R3512:3518 Project.Com <> :pack_type::'''value'_x not
R3519:3519 Project.Com <> p:52 var
R3524:3524 Crypt.package.pkg_notation PackageNotation :pack_type::'('_x_')' not
R3538:3538 Crypt.package.pkg_notation PackageNotation :pack_type::'('_x_')' not
R3525:3536 Project.Com <> :pack_type::'''commitment'_x not
R3537:3537 Project.Com <> p:52 var
binder 3508:3508 <> v:53
R3569:3573 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R3583:3600 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R3577:3581 Project.Com <> setup proj
R3574:3574 Project.Com <> p:52 var
binder 3568:3568 <> k:54
R3602:3606 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R3622:3639 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R3610:3620 Project.Com <> sampl_value proj
R3607:3607 Project.Com <> p:52 var
binder 3601:3601 <> u:55
R3640:3640 Crypt.package.pkg_notation PackageNotation ::package_scope:''''_x_'←'_x_';;'_x not
R3647:3651 Crypt.package.pkg_notation PackageNotation ::package_scope:''''_x_'←'_x_';;'_x not
R3666:3694 Crypt.package.pkg_notation PackageNotation ::package_scope:''''_x_'←'_x_';;'_x not
R3655:3660 Project.Com <> commit proj
R3652:3652 Project.Com <> p:52 var
R3663:3663 Project.Com <> k:54 var
R3665:3665 Project.Com <> u:55 var
R3641:3641 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3643:3644 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3646:3646 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
binder 3645:3645 <> o:56
binder 3642:3642 <> c:57
binder 3641:3646 <> pat:58
R3696:3698 Crypt.package.pkg_core_definition <> ret constr
R3701:3712 Project.Com <> ::package_scope:'''commitment'_x not
R3713:3713 Project.Com <> p:52 var
R3716:3716 Project.Com <> c:57 var
R3464:3470 NominalSSP.NomPackage <> no_locs abbrev
R3486:3493 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_x_':'_x_')'_':'_x_'{'_x_'}' not
R3504:3507 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_x_':'_x_')'_':'_x_'{'_x_'}' not
R3509:3511 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_x_':'_x_')'_':'_x_'{'_x_'}' not
R3520:3523 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_x_':'_x_')'_':'_x_'{'_x_'}' not
R3539:3567 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_x_':'_x_')'_':'_x_'{'_x_'}' not
R3717:3731 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_x_':'_x_')'_':'_x_'{'_x_'}' not
R3494:3503 Project.Com <> COMMITMENT def
R3512:3518 Project.Com <> :pack_type::'''value'_x not
R3519:3519 Project.Com <> p:52 var
R3524:3524 Crypt.package.pkg_notation PackageNotation :pack_type::'('_x_')' not
R3538:3538 Crypt.package.pkg_notation PackageNotation :pack_type::'('_x_')' not
R3525:3536 Project.Com <> :pack_type::'''commitment'_x not
R3537:3537 Project.Com <> p:52 var
binder 3508:3508 <> v:59
R3569:3573 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R3583:3600 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R3577:3581 Project.Com <> setup proj
R3574:3574 Project.Com <> p:52 var
binder 3568:3568 <> k:60
R3602:3606 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R3622:3639 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R3610:3620 Project.Com <> sampl_value proj
R3607:3607 Project.Com <> p:52 var
binder 3601:3601 <> u:61
R3640:3640 Crypt.package.pkg_notation PackageNotation ::package_scope:''''_x_'←'_x_';;'_x not
R3647:3651 Crypt.package.pkg_notation PackageNotation ::package_scope:''''_x_'←'_x_';;'_x not
R3666:3694 Crypt.package.pkg_notation PackageNotation ::package_scope:''''_x_'←'_x_';;'_x not
R3655:3660 Project.Com <> commit proj
R3652:3652 Project.Com <> p:52 var
R3663:3663 Project.Com <> k:60 var
R3665:3665 Project.Com <> u:61 var
R3641:3641 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3643:3644 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3646:3646 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
binder 3645:3645 <> o:62
binder 3642:3642 <> c:63
binder 3641:3646 <> pat:64
R3696:3698 Crypt.package.pkg_core_definition <> ret constr
R3701:3712 Project.Com <> ::package_scope:'''commitment'_x not
R3713:3713 Project.Com <> p:52 var
R3716:3716 Project.Com <> c:63 var
def 3757:3762 <> Hiding
binder 3764:3764 <> p:65
binder 3766:3766 <> b:66
R3773:3775 Coq.ssr.ssreflect <> ::boolean_if_scope:'if'_x_'then'_x_'else'_x not
R3777:3782 Coq.ssr.ssreflect <> ::boolean_if_scope:'if'_x_'then'_x_'else'_x not
R3796:3801 Coq.ssr.ssreflect <> ::boolean_if_scope:'if'_x_'then'_x_'else'_x not
R3776:3776 Project.Com <> b:66 var
R3783:3793 Project.Com <> Hiding_real def
R3795:3795 Project.Com <> p:65 var
R3802:3813 Project.Com <> Hiding_ideal def
R3815:3815 Project.Com <> p:65 var
def 3831:3840 <> Adv_Hiding
binder 3842:3842 <> p:67
R3875:3879 Coq.Unicode.Utf8_core <> ::type_scope:x_'→'_x not
R3850:3858 NominalSSP.NomPackage <> adversary abbrev
R3861:3871 Project.Com <> ICommitment def
R3873:3873 Project.Com <> p:67 var
R3880:3887 Crypt.Axioms <> R defax
binder 3845:3846 <> ε:68
R3895:3898 Coq.Unicode.Utf8_core <> ::type_scope:'∀'_x_'..'_x_','_x not
R3928:3929 Coq.Unicode.Utf8_core <> ::type_scope:'∀'_x_'..'_x_','_x not
R3903:3911 NominalSSP.NomPackage <> adversary abbrev
R3914:3924 Project.Com <> ICommitment def
R3926:3926 Project.Com <> p:67 var
binder 3899:3899 <> A:69
R3949:3952 mathcomp.algebra.ssrnum Num.Syntax ::ring_scope:x_'<='_x not
R3930:3935 NominalSSP.Disjoint <> AdvFor def
R3938:3943 Project.Com <> Hiding def
R3945:3945 Project.Com <> p:67 var
R3948:3948 Project.Com <> A:69 var
R3953:3954 Project.Com <> ε:68 var
R3956:3956 Project.Com <> A:69 var
def 3999:4007 <> chBinding
binder 4009:4009 <> p:70
R4065:4068 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'×'_x not
R4053:4056 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'×'_x not
R4039:4042 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'×'_x not
R4027:4030 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'×'_x not
R4014:4025 Project.Com <> ::package_scope:'''commitment'_x not
R4026:4026 Project.Com <> p:70 var
R4031:4037 Project.Com <> ::package_scope:'''value'_x not
R4038:4038 Project.Com <> p:70 var
R4043:4051 Project.Com <> ::package_scope:'''opening'_x not
R4052:4052 Project.Com <> p:70 var
R4057:4063 Project.Com <> ::package_scope:'''value'_x not
R4064:4064 Project.Com <> p:70 var
R4069:4077 Project.Com <> ::package_scope:'''opening'_x not
R4078:4078 Project.Com <> p:70 var
R4110:4118 Project.Com <> chBinding def
not 4091:4091 <> :pack_type::'''binding'_x
def 4179:4185 <> BINDING
def 4207:4214 <> IBinding
binder 4216:4216 <> p:71
R4221:4231 Crypt.package.pkg_notation PackageNotation ::package_scope:'['_'interface'_x_']' not
R4274:4275 Crypt.package.pkg_notation PackageNotation ::package_scope:'['_'interface'_x_']' not
R4232:4239 Crypt.package.pkg_notation PackageNotation :interface::'#val'_'#['_x_']'_':'_x_'→'_x not
R4247:4251 Crypt.package.pkg_notation PackageNotation :interface::'#val'_'#['_x_']'_':'_x_'→'_x not
R4264:4268 Crypt.package.pkg_notation PackageNotation :interface::'#val'_'#['_x_']'_':'_x_'→'_x not
R4240:4246 Project.Com <> BINDING def
R4252:4252 Crypt.package.pkg_notation PackageNotation :pack_type::'('_x_')' not
R4263:4263 Crypt.package.pkg_notation PackageNotation :pack_type::'('_x_')' not
R4253:4261 Project.Com <> :pack_type::'''binding'_x not
R4262:4262 Project.Com <> p:71 var
R4269:4273 Crypt.package.pkg_notation PackageNotation :pack_type::'''bool' not
def 4295:4306 <> Binding_real
binder 4308:4308 <> p:72
R4321:4324 NominalSSP.NomPackage <> game abbrev
R4327:4334 Project.Com <> IBinding def
R4336:4336 Project.Com <> p:72 var
R4351:4358 NominalSSP.NomPackage <> ::package_scope:'['_'module'_x_';'_x_']' not
R4366:4380 NominalSSP.NomPackage <> ::package_scope:'['_'module'_x_';'_x_']' not
R4711:4720 NominalSSP.NomPackage <> ::package_scope:'['_'module'_x_';'_x_']' not
R4359:4365 NominalSSP.NomPackage <> no_locs abbrev
R4381:4388 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_''''_x_':'_x_')'_':'_x_'{'_x_'}' not
R4396:4400 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_''''_x_':'_x_')'_':'_x_'{'_x_'}' not
R4418:4420 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_''''_x_':'_x_')'_':'_x_'{'_x_'}' not
R4431:4434 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_''''_x_':'_x_')'_':'_x_'{'_x_'}' not
R4440:4469 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_''''_x_':'_x_')'_':'_x_'{'_x_'}' not
R4696:4710 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_''''_x_':'_x_')'_':'_x_'{'_x_'}' not
R4389:4395 Project.Com <> BINDING def
R4421:4429 Project.Com <> :pack_type::'''binding'_x not
R4430:4430 Project.Com <> p:72 var
R4435:4439 Crypt.package.pkg_notation PackageNotation :pack_type::'''bool' not
R4401:4401 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4403:4404 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4406:4407 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4409:4410 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4413:4414 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4417:4417 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
binder 4415:4416 <> o':73
binder 4411:4412 <> v':74
binder 4408:4408 <> o:75
binder 4405:4405 <> v:76
binder 4402:4402 <> c:77
binder 4401:4417 <> pat:78
R4471:4475 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R4485:4502 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R4479:4483 Project.Com <> setup proj
R4476:4476 Project.Com <> p:72 var
binder 4470:4470 <> k:79
R4504:4508 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R4527:4544 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R4512:4517 Project.Com <> verify proj
R4509:4509 Project.Com <> p:72 var
R4520:4520 Project.Com <> k:79 var
R4522:4522 Project.Com <> c:77 var
R4524:4524 Project.Com <> v:76 var
R4526:4526 Project.Com <> o:75 var
binder 4503:4503 <> b:80
R4547:4551 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R4572:4590 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R4555:4560 Project.Com <> verify proj
R4552:4552 Project.Com <> p:72 var
R4563:4563 Project.Com <> k:79 var
R4565:4565 Project.Com <> c:77 var
R4567:4568 Project.Com <> v':74 var
R4570:4571 Project.Com <> o':73 var
binder 4545:4546 <> b':81
R4591:4598 Crypt.package.pkg_distr <> ::package_scope:'#assert'_x_';;'_x not
R4600:4617 Crypt.package.pkg_distr <> ::package_scope:'#assert'_x_';;'_x not
R4599:4599 Project.Com <> b:80 var
R4618:4625 Crypt.package.pkg_distr <> ::package_scope:'#assert'_x_';;'_x not
R4628:4645 Crypt.package.pkg_distr <> ::package_scope:'#assert'_x_';;'_x not
R4626:4627 Project.Com <> b':81 var
R4646:4654 Crypt.package.pkg_distr <> ::package_scope:'#assert'_x_';;'_x not
R4662:4680 Crypt.package.pkg_distr <> ::package_scope:'#assert'_x_';;'_x not
R4656:4659 mathcomp.ssreflect.eqtype <> ::bool_scope:x_'!='_x not
R4655:4655 Project.Com <> v:76 var
R4660:4661 Project.Com <> v':74 var
R4682:4684 Crypt.package.pkg_core_definition <> ret constr
R4686:4690 Crypt.package.pkg_notation PackageNotation ::package_scope:'''bool' not
R4692:4695 Coq.Init.Datatypes <> true constr
R4359:4365 NominalSSP.NomPackage <> no_locs abbrev
R4381:4388 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_''''_x_':'_x_')'_':'_x_'{'_x_'}' not
R4396:4400 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_''''_x_':'_x_')'_':'_x_'{'_x_'}' not
R4418:4420 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_''''_x_':'_x_')'_':'_x_'{'_x_'}' not
R4431:4434 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_''''_x_':'_x_')'_':'_x_'{'_x_'}' not
R4440:4469 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_''''_x_':'_x_')'_':'_x_'{'_x_'}' not
R4696:4710 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_''''_x_':'_x_')'_':'_x_'{'_x_'}' not
R4389:4395 Project.Com <> BINDING def
R4421:4429 Project.Com <> :pack_type::'''binding'_x not
R4430:4430 Project.Com <> p:72 var
R4435:4439 Crypt.package.pkg_notation PackageNotation :pack_type::'''bool' not
R4401:4401 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4403:4404 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4406:4407 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4409:4410 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4413:4414 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4417:4417 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
binder 4415:4416 <> o':82
binder 4411:4412 <> v':83
binder 4408:4408 <> o:84
binder 4405:4405 <> v:85
binder 4402:4402 <> c:86
binder 4401:4417 <> pat:87
R4471:4475 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R4485:4502 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R4479:4483 Project.Com <> setup proj
R4476:4476 Project.Com <> p:72 var
binder 4470:4470 <> k:88
R4504:4508 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R4527:4544 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R4512:4517 Project.Com <> verify proj
R4509:4509 Project.Com <> p:72 var
R4520:4520 Project.Com <> k:88 var
R4522:4522 Project.Com <> c:86 var
R4524:4524 Project.Com <> v:85 var
R4526:4526 Project.Com <> o:84 var
binder 4503:4503 <> b:89
R4547:4551 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R4572:4590 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R4555:4560 Project.Com <> verify proj
R4552:4552 Project.Com <> p:72 var
R4563:4563 Project.Com <> k:88 var
R4565:4565 Project.Com <> c:86 var
R4567:4568 Project.Com <> v':83 var
R4570:4571 Project.Com <> o':82 var
binder 4545:4546 <> b':90
R4591:4598 Crypt.package.pkg_distr <> ::package_scope:'#assert'_x_';;'_x not
R4600:4617 Crypt.package.pkg_distr <> ::package_scope:'#assert'_x_';;'_x not
R4599:4599 Project.Com <> b:89 var
R4618:4625 Crypt.package.pkg_distr <> ::package_scope:'#assert'_x_';;'_x not
R4628:4645 Crypt.package.pkg_distr <> ::package_scope:'#assert'_x_';;'_x not
R4626:4627 Project.Com <> b':90 var
R4646:4654 Crypt.package.pkg_distr <> ::package_scope:'#assert'_x_';;'_x not
R4662:4680 Crypt.package.pkg_distr <> ::package_scope:'#assert'_x_';;'_x not
R4656:4659 mathcomp.ssreflect.eqtype <> ::bool_scope:x_'!='_x not
R4655:4655 Project.Com <> v:85 var
R4660:4661 Project.Com <> v':83 var
R4682:4684 Crypt.package.pkg_core_definition <> ret constr
R4686:4690 Crypt.package.pkg_notation PackageNotation ::package_scope:'''bool' not
R4692:4695 Coq.Init.Datatypes <> true constr
def 4739:4751 <> Binding_ideal
binder 4753:4753 <> p:91
R4766:4769 NominalSSP.NomPackage <> game abbrev
R4772:4779 Project.Com <> IBinding def
R4781:4781 Project.Com <> p:91 var
R4796:4803 NominalSSP.NomPackage <> ::package_scope:'['_'module'_x_';'_x_']' not
R4811:4825 NominalSSP.NomPackage <> ::package_scope:'['_'module'_x_';'_x_']' not
R5051:5060 NominalSSP.NomPackage <> ::package_scope:'['_'module'_x_';'_x_']' not
R4804:4810 NominalSSP.NomPackage <> no_locs abbrev
R4826:4833 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_''''_x_':'_x_')'_':'_x_'{'_x_'}' not
R4841:4845 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_''''_x_':'_x_')'_':'_x_'{'_x_'}' not
R4863:4865 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_''''_x_':'_x_')'_':'_x_'{'_x_'}' not
R4876:4879 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_''''_x_':'_x_')'_':'_x_'{'_x_'}' not
R4885:4913 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_''''_x_':'_x_')'_':'_x_'{'_x_'}' not
R5037:5050 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_''''_x_':'_x_')'_':'_x_'{'_x_'}' not
R4834:4840 Project.Com <> BINDING def
R4866:4874 Project.Com <> :pack_type::'''binding'_x not
R4875:4875 Project.Com <> p:91 var
R4880:4884 Crypt.package.pkg_notation PackageNotation :pack_type::'''bool' not
R4846:4846 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4848:4849 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4851:4852 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4854:4855 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4858:4859 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4862:4862 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
binder 4860:4861 <> o':92
binder 4856:4857 <> v':93
binder 4853:4853 <> o:94
binder 4850:4850 <> v:95
binder 4847:4847 <> c:96
binder 4846:4862 <> pat:97
R4915:4919 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R4929:4946 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R4923:4927 Project.Com <> setup proj
R4920:4920 Project.Com <> p:91 var
binder 4914:4914 <> k:98
R4965:4982 Crypt.package.pkg_notation PackageNotation ::package_scope:x_';;'_x not
R4950:4955 Project.Com <> verify proj
R4947:4947 Project.Com <> p:91 var
R4958:4958 Project.Com <> k:98 var
R4960:4960 Project.Com <> c:96 var
R4962:4962 Project.Com <> v:95 var
R4964:4964 Project.Com <> o:94 var
R5003:5021 Crypt.package.pkg_notation PackageNotation ::package_scope:x_';;'_x not
R4986:4991 Project.Com <> verify proj
R4983:4983 Project.Com <> p:91 var
R4994:4994 Project.Com <> k:98 var
R4996:4996 Project.Com <> c:96 var
R4998:4999 Project.Com <> v':93 var
R5001:5002 Project.Com <> o':92 var
R5023:5025 Crypt.package.pkg_core_definition <> ret constr
R5027:5031 Crypt.package.pkg_notation PackageNotation ::package_scope:'''bool' not
R5033:5036 Coq.Init.Datatypes <> true constr
R4804:4810 NominalSSP.NomPackage <> no_locs abbrev
R4826:4833 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_''''_x_':'_x_')'_':'_x_'{'_x_'}' not
R4841:4845 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_''''_x_':'_x_')'_':'_x_'{'_x_'}' not
R4863:4865 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_''''_x_':'_x_')'_':'_x_'{'_x_'}' not
R4876:4879 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_''''_x_':'_x_')'_':'_x_'{'_x_'}' not
R4885:4913 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_''''_x_':'_x_')'_':'_x_'{'_x_'}' not
R5037:5050 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_''''_x_':'_x_')'_':'_x_'{'_x_'}' not
R4834:4840 Project.Com <> BINDING def
R4866:4874 Project.Com <> :pack_type::'''binding'_x not
R4875:4875 Project.Com <> p:91 var
R4880:4884 Crypt.package.pkg_notation PackageNotation :pack_type::'''bool' not
R4846:4846 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4848:4849 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4851:4852 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4854:4855 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4858:4859 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4862:4862 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
binder 4860:4861 <> o':99
binder 4856:4857 <> v':100
binder 4853:4853 <> o:101
binder 4850:4850 <> v:102
binder 4847:4847 <> c:103
binder 4846:4862 <> pat:104
R4915:4919 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R4929:4946 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R4923:4927 Project.Com <> setup proj
R4920:4920 Project.Com <> p:91 var
binder 4914:4914 <> k:105
R4965:4982 Crypt.package.pkg_notation PackageNotation ::package_scope:x_';;'_x not
R4950:4955 Project.Com <> verify proj
R4947:4947 Project.Com <> p:91 var
R4958:4958 Project.Com <> k:105 var
R4960:4960 Project.Com <> c:103 var
R4962:4962 Project.Com <> v:102 var
R4964:4964 Project.Com <> o:101 var
R5003:5021 Crypt.package.pkg_notation PackageNotation ::package_scope:x_';;'_x not
R4986:4991 Project.Com <> verify proj
R4983:4983 Project.Com <> p:91 var
R4994:4994 Project.Com <> k:105 var
R4996:4996 Project.Com <> c:103 var
R4998:4999 Project.Com <> v':100 var
R5001:5002 Project.Com <> o':99 var
R5023:5025 Crypt.package.pkg_core_definition <> ret constr
R5027:5031 Crypt.package.pkg_notation PackageNotation ::package_scope:'''bool' not
R5033:5036 Coq.Init.Datatypes <> true constr
def 5075:5081 <> Binding
binder 5083:5083 <> p:106
binder 5085:5085 <> b:107
R5092:5094 Coq.ssr.ssreflect <> ::boolean_if_scope:'if'_x_'then'_x_'else'_x not
R5096:5101 Coq.ssr.ssreflect <> ::boolean_if_scope:'if'_x_'then'_x_'else'_x not
R5116:5121 Coq.ssr.ssreflect <> ::boolean_if_scope:'if'_x_'then'_x_'else'_x not
R5095:5095 Project.Com <> b:107 var
R5102:5113 Project.Com <> Binding_real def
R5115:5115 Project.Com <> p:106 var
R5122:5134 Project.Com <> Binding_ideal def
R5136:5136 Project.Com <> p:106 var
def 5152:5162 <> Adv_Binding
binder 5164:5164 <> p:108
R5194:5198 Coq.Unicode.Utf8_core <> ::type_scope:x_'→'_x not
R5172:5180 NominalSSP.NomPackage <> adversary abbrev
R5183:5190 Project.Com <> IBinding def
R5192:5192 Project.Com <> p:108 var
R5199:5206 Crypt.Axioms <> R defax
binder 5167:5168 <> ε:109
R5214:5217 Coq.Unicode.Utf8_core <> ::type_scope:'∀'_x_'..'_x_','_x not
R5244:5245 Coq.Unicode.Utf8_core <> ::type_scope:'∀'_x_'..'_x_','_x not
R5222:5230 NominalSSP.NomPackage <> adversary abbrev
R5233:5240 Project.Com <> IBinding def
R5242:5242 Project.Com <> p:108 var
binder 5218:5218 <> A:110
R5266:5269 mathcomp.algebra.ssrnum Num.Syntax ::ring_scope:x_'<='_x not
R5246:5251 NominalSSP.Disjoint <> AdvFor def
R5254:5260 Project.Com <> Binding def
R5262:5262 Project.Com <> p:108 var
R5265:5265 Project.Com <> A:110 var
R5270:5271 Project.Com <> ε:109 var
R5273:5273 Project.Com <> A:110 var
rec 5419:5428 <> raw_sigExt
proj 5438:5438 <> p
proj 5458:5466 <> sampl_wit
proj 5520:5534 <> sampl_challenge
proj 5590:5596 <> key_gen
R5443:5451 NominalSSP.Example.Sigma.Sigma <> raw_sigma rec
R5477:5480 Crypt.package.pkg_core_definition <> code rec
R5503:5509 NominalSSP.Example.Sigma.Sigma <> Witness proj
R5511:5511 Project.Com <> p:112 meth
R5490:5500 Crypt.package.pkg_notation PackageNotation ::package_scope:'['_'interface'_']' not
R5482:5488 NominalSSP.NomPackage <> no_locs abbrev
R5545:5548 Crypt.package.pkg_core_definition <> code rec
R5571:5579 NominalSSP.Example.Sigma.Sigma <> Challenge proj
R5581:5581 Project.Com <> p:112 meth
R5558:5568 Crypt.package.pkg_notation PackageNotation ::package_scope:'['_'interface'_']' not
R5550:5556 NominalSSP.NomPackage <> no_locs abbrev
R5601:5605 Coq.Unicode.Utf8_core <> ::type_scope:'∀'_x_'..'_x_','_x not
R5619:5627 Coq.Unicode.Utf8_core <> ::type_scope:'∀'_x_'..'_x_','_x not
R5610:5616 NominalSSP.Example.Sigma.Sigma <> Witness proj
R5618:5618 Project.Com <> p:112 meth
binder 5606:5606 <> w:115
R5628:5631 Crypt.package.pkg_core_definition <> code rec
R5654:5662 NominalSSP.Example.Sigma.Sigma <> Statement proj
R5664:5664 Project.Com <> p:112 meth
R5641:5651 Crypt.package.pkg_notation PackageNotation ::package_scope:'['_'interface'_']' not
R5633:5639 NominalSSP.NomPackage <> no_locs abbrev
def 5685:5694 <> sig_to_com
R5701:5710 Project.Com <> raw_sigExt rec
binder 5697:5697 <> p:117
R5715:5721 Project.Com <> raw_com rec
R5731:5733 Project.Com <> Key proj
R5731:5733 Project.Com <> Key proj
R5731:5733 Project.Com <> Key proj
R5757:5761 Project.Com <> Value proj
R5757:5761 Project.Com <> Value proj
R5786:5795 Project.Com <> Commitment proj
R5786:5795 Project.Com <> Commitment proj
R5818:5824 Project.Com <> Opening proj
R5818:5824 Project.Com <> Opening proj
R5849:5853 Project.Com <> setup proj
R5849:5853 Project.Com <> setup proj
R5997:6002 Project.Com <> commit proj
R5997:6002 Project.Com <> commit proj
R6109:6114 Project.Com <> verify proj
R6109:6114 Project.Com <> verify proj
R6197:6207 Project.Com <> sampl_value proj
R6197:6207 Project.Com <> sampl_value proj
R5741:5749 NominalSSP.Example.Sigma.Sigma <> Statement proj
R5738:5738 Project.Com <> p:117 var
R5769:5777 NominalSSP.Example.Sigma.Sigma <> Challenge proj
R5766:5766 Project.Com <> p:117 var
R5803:5809 NominalSSP.Example.Sigma.Sigma <> Message proj
R5800:5800 Project.Com <> p:117 var
R5832:5839 NominalSSP.Example.Sigma.Sigma <> Response proj
R5829:5829 Project.Com <> p:117 var
R5864:5877 Crypt.package.pkg_core_definition <> ::package_scope:'{'_'code'_x_'}' not
R5982:5989 Crypt.package.pkg_core_definition <> ::package_scope:'{'_'code'_x_'}' not
R5879:5883 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R5897:5908 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R5887:5895 Project.Com <> sampl_wit proj
R5884:5884 Project.Com <> p:117 var
binder 5878:5878 <> w:118
R5910:5915 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R5929:5940 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R5919:5925 Project.Com <> key_gen proj
R5916:5916 Project.Com <> p:117 var
R5928:5928 Project.Com <> w:118 var
binder 5909:5909 <> h:119
R5941:5948 Crypt.package.pkg_distr <> ::package_scope:'#assert'_x_';;'_x not
R5958:5968 Crypt.package.pkg_distr <> ::package_scope:'#assert'_x_';;'_x not
R5952:5952 NominalSSP.Example.Sigma.Sigma <> R proj
R5949:5949 Project.Com <> p:117 var
R5955:5955 Project.Com <> h:119 var
R5957:5957 Project.Com <> w:118 var
R5969:5971 Crypt.package.pkg_core_definition <> ret constr
R5974:5974 Coq.ssr.ssreflect <> ::core_scope:x_':'_x not
R5976:5979 Coq.ssr.ssreflect <> ::core_scope:x_':'_x not
R5975:5975 Project.Com <> h:119 var
R6007:6009 Coq.Unicode.Utf8_core <> :::'λ'_x_'..'_x_','_x not
R6013:6019 Coq.Unicode.Utf8_core <> :::'λ'_x_'..'_x_','_x not
binder 6010:6010 <> k:120
binder 6012:6012 <> u:121
R6020:6032 Crypt.package.pkg_core_definition <> ::package_scope:'{'_'code'_x_'}' not
R6095:6101 Crypt.package.pkg_core_definition <> ::package_scope:'{'_'code'_x_'}' not
R6033:6033 Crypt.package.pkg_notation PackageNotation ::package_scope:''''_x_'←'_x_';;'_x not
R6040:6044 Crypt.package.pkg_notation PackageNotation ::package_scope:''''_x_'←'_x_';;'_x not
R6061:6071 Crypt.package.pkg_notation PackageNotation ::package_scope:''''_x_'←'_x_';;'_x not
R6048:6055 NominalSSP.Example.Sigma.Sigma <> simulate proj
R6045:6045 Project.Com <> p:117 var
R6058:6058 Project.Com <> k:120 var
R6060:6060 Project.Com <> u:121 var
R6034:6034 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6036:6037 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6039:6039 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
binder 6038:6038 <> z:122
binder 6035:6035 <> a:123
binder 6034:6039 <> pat:124
R6072:6074 Crypt.package.pkg_core_definition <> ret constr
R6083:6086 Coq.ssr.ssreflect <> ::core_scope:x_':'_x not
R6093:6093 Coq.ssr.ssreflect <> ::core_scope:x_':'_x not
R6088:6091 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'×'_x not
R6077:6077 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6079:6080 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6082:6082 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6078:6078 Project.Com <> a:123 var
R6081:6081 Project.Com <> z:122 var
R6119:6121 Coq.Unicode.Utf8_core <> :::'λ'_x_'..'_x_','_x not
R6129:6135 Coq.Unicode.Utf8_core <> :::'λ'_x_'..'_x_','_x not
binder 6122:6122 <> k:125
binder 6124:6124 <> c:126
binder 6126:6126 <> v:127
binder 6128:6128 <> d:128
R6136:6150 Crypt.package.pkg_core_definition <> ::package_scope:'{'_'code'_x_'}' not
R6183:6189 Crypt.package.pkg_core_definition <> ::package_scope:'{'_'code'_x_'}' not
R6151:6153 Crypt.package.pkg_core_definition <> ret constr
R6159:6170 NominalSSP.Example.Sigma.Sigma <> verify proj
R6156:6156 Project.Com <> p:117 var
R6173:6173 Project.Com <> k:125 var
R6175:6175 Project.Com <> c:126 var
R6177:6177 Project.Com <> v:127 var
R6179:6179 Project.Com <> d:128 var
R6215:6229 Project.Com <> sampl_challenge proj
R6212:6212 Project.Com <> p:117 var
def 6391:6406 <> Call_correct_sig
R6412:6421 Project.Com <> raw_sigExt rec
binder 6409:6409 <> p:129
R6428:6433 NominalSSP.NomPackage <> module rec
R6436:6443 NominalSSP.Example.Sigma.Sigma <> ICorrect def
R6445:6445 Project.Com <> p:129 var
R6449:6460 Project.Com <> ICorrect_com def
R6463:6472 Project.Com <> sig_to_com def
R6474:6474 Project.Com <> p:129 var
R6484:6491 NominalSSP.NomPackage <> ::package_scope:'['_'module'_x_';'_x_']' not
R6499:6507 NominalSSP.NomPackage <> ::package_scope:'['_'module'_x_';'_x_']' not
R6814:6817 NominalSSP.NomPackage <> ::package_scope:'['_'module'_x_';'_x_']' not
R6492:6498 NominalSSP.NomPackage <> no_locs abbrev
R6508:6515 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_x_':'_x_')'_':'_x_'{'_x_'}' not
R6527:6530 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_x_':'_x_')'_':'_x_'{'_x_'}' not
R6532:6534 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_x_':'_x_')'_':'_x_'{'_x_'}' not
R6556:6559 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_x_':'_x_')'_':'_x_'{'_x_'}' not
R6565:6589 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_x_':'_x_')'_':'_x_'{'_x_'}' not
R6802:6813 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_x_':'_x_')'_':'_x_'{'_x_'}' not
R6516:6526 Project.Com <> CORRECTNESS def
R6535:6542 Project.Com <> :pack_type::'''value'_x not
R6555:6555 Project.Com <> :pack_type::'''value'_x not
R6543:6552 Project.Com <> sig_to_com def
R6554:6554 Project.Com <> p:129 var
R6560:6564 Crypt.package.pkg_notation PackageNotation :pack_type::'''bool' not
binder 6531:6531 <> v:130
R6590:6597 Crypt.package.pkg_notation PackageNotation ::package_scope:'#import'_x_'as'_x_';;'_x not
R6635:6638 Crypt.package.pkg_notation PackageNotation ::package_scope:'#import'_x_'as'_x_';;'_x not
R6642:6657 Crypt.package.pkg_notation PackageNotation ::package_scope:'#import'_x_'as'_x_';;'_x not
binder 6639:6641 <> COR:131
R6659:6663 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R6677:6693 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R6667:6675 Project.Com <> sampl_wit proj
R6664:6664 Project.Com <> p:129 var
binder 6658:6658 <> w:132
R6695:6699 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R6713:6728 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R6703:6709 Project.Com <> key_gen proj
R6700:6700 Project.Com <> p:129 var
R6712:6712 Project.Com <> w:132 var
binder 6694:6694 <> h:133
R6729:6736 Crypt.package.pkg_distr <> ::package_scope:'#assert'_x_';;'_x not
R6746:6761 Crypt.package.pkg_distr <> ::package_scope:'#assert'_x_';;'_x not
R6740:6740 NominalSSP.Example.Sigma.Sigma <> R proj
R6737:6737 Project.Com <> p:129 var
R6743:6743 Project.Com <> h:133 var
R6745:6745 Project.Com <> w:132 var
R6763:6767 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R6781:6796 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R6768:6770 Project.Com <> COR:131 var
R6772:6772 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6774:6775 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6777:6778 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6780:6780 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6773:6773 Project.Com <> h:133 var
R6776:6776 Project.Com <> w:132 var
R6779:6779 Project.Com <> v:130 var
binder 6762:6762 <> b:134
R6797:6799 Crypt.package.pkg_core_definition <> ret constr
R6801:6801 Project.Com <> b:134 var
R6598:6602 Crypt.package.pkg_notation PackageNotation ::package_scope:'{'_'sig'_x_'}' not
R6634:6634 Crypt.package.pkg_notation PackageNotation ::package_scope:'{'_'sig'_x_'}' not
R6603:6605 Crypt.package.pkg_notation PackageNotation :pack_op::'#['_x_']'_':'_x_'→'_x not
R6609:6613 Crypt.package.pkg_notation PackageNotation :pack_op::'#['_x_']'_':'_x_'→'_x not
R6624:6628 Crypt.package.pkg_notation PackageNotation :pack_op::'#['_x_']'_':'_x_'→'_x not
R6606:6608 NominalSSP.Example.Sigma.Sigma <> RUN def
R6614:6614 Crypt.package.pkg_notation PackageNotation :pack_type::'('_x_')' not
R6623:6623 Crypt.package.pkg_notation PackageNotation :pack_type::'('_x_')' not
R6615:6621 NominalSSP.Example.Sigma.Sigma <> :pack_type::'''input'_x not
R6622:6622 Project.Com <> p:129 var
R6629:6633 Crypt.package.pkg_notation PackageNotation :pack_type::'''bool' not
R6492:6498 NominalSSP.NomPackage <> no_locs abbrev
R6508:6515 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_x_':'_x_')'_':'_x_'{'_x_'}' not
R6527:6530 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_x_':'_x_')'_':'_x_'{'_x_'}' not
R6532:6534 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_x_':'_x_')'_':'_x_'{'_x_'}' not
R6556:6559 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_x_':'_x_')'_':'_x_'{'_x_'}' not
R6565:6589 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_x_':'_x_')'_':'_x_'{'_x_'}' not
R6802:6813 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_x_':'_x_')'_':'_x_'{'_x_'}' not
R6516:6526 Project.Com <> CORRECTNESS def
R6535:6542 Project.Com <> :pack_type::'''value'_x not
R6555:6555 Project.Com <> :pack_type::'''value'_x not
R6543:6552 Project.Com <> sig_to_com def
R6554:6554 Project.Com <> p:129 var
R6560:6564 Crypt.package.pkg_notation PackageNotation :pack_type::'''bool' not
binder 6531:6531 <> v:135
R6590:6597 Crypt.package.pkg_notation PackageNotation ::package_scope:'#import'_x_'as'_x_';;'_x not
R6635:6638 Crypt.package.pkg_notation PackageNotation ::package_scope:'#import'_x_'as'_x_';;'_x not
R6642:6657 Crypt.package.pkg_notation PackageNotation ::package_scope:'#import'_x_'as'_x_';;'_x not
binder 6639:6641 <> COR:136
R6659:6663 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R6677:6693 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R6667:6675 Project.Com <> sampl_wit proj
R6664:6664 Project.Com <> p:129 var
binder 6658:6658 <> w:137
R6695:6699 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R6713:6728 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R6703:6709 Project.Com <> key_gen proj
R6700:6700 Project.Com <> p:129 var
R6712:6712 Project.Com <> w:137 var
binder 6694:6694 <> h:138
R6729:6736 Crypt.package.pkg_distr <> ::package_scope:'#assert'_x_';;'_x not
R6746:6761 Crypt.package.pkg_distr <> ::package_scope:'#assert'_x_';;'_x not
R6740:6740 NominalSSP.Example.Sigma.Sigma <> R proj
R6737:6737 Project.Com <> p:129 var
R6743:6743 Project.Com <> h:138 var
R6745:6745 Project.Com <> w:137 var
R6763:6767 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R6781:6796 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R6768:6770 Project.Com <> COR:136 var
R6772:6772 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6774:6775 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6777:6778 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6780:6780 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6773:6773 Project.Com <> h:138 var
R6776:6776 Project.Com <> w:137 var
R6779:6779 Project.Com <> v:135 var
binder 6762:6762 <> b:139
R6797:6799 Crypt.package.pkg_core_definition <> ret constr
R6801:6801 Project.Com <> b:139 var
R6598:6602 Crypt.package.pkg_notation PackageNotation ::package_scope:'{'_'sig'_x_'}' not
R6634:6634 Crypt.package.pkg_notation PackageNotation ::package_scope:'{'_'sig'_x_'}' not
R6603:6605 Crypt.package.pkg_notation PackageNotation :pack_op::'#['_x_']'_':'_x_'→'_x not
R6609:6613 Crypt.package.pkg_notation PackageNotation :pack_op::'#['_x_']'_':'_x_'→'_x not
R6624:6628 Crypt.package.pkg_notation PackageNotation :pack_op::'#['_x_']'_':'_x_'→'_x not
R6606:6608 NominalSSP.Example.Sigma.Sigma <> RUN def
R6614:6614 Crypt.package.pkg_notation PackageNotation :pack_type::'('_x_')' not
R6623:6623 Crypt.package.pkg_notation PackageNotation :pack_type::'('_x_')' not
R6615:6621 NominalSSP.Example.Sigma.Sigma <> :pack_type::'''input'_x not
R6622:6622 Project.Com <> p:129 var
R6629:6633 Crypt.package.pkg_notation PackageNotation :pack_type::'''bool' not
prf 6827:6848 <> Correct_ideal_sim_perf
binder 6850:6850 <> p:140
R6856:6862 NominalSSP.Disjoint <> perfect def
R6865:6876 Project.Com <> ICorrect_com def
R6879:6888 Project.Com <> sig_to_com def
R6890:6890 Project.Com <> p:140 var
R6917:6921 NominalSSP.Disjoint <> ::sep_scope:x_'∘'_x not
R6899:6914 Project.Com <> Call_correct_sig def
R6916:6916 Project.Com <> p:140 var
R6922:6940 NominalSSP.Example.Sigma.Sigma <> Correct_ideal def
R6942:6942 Project.Com <> p:140 var
R6946:6958 Project.Com <> Correct_ideal def
R6961:6970 Project.Com <> sig_to_com def
R6972:6972 Project.Com <> p:140 var
R7015:7027 NominalSSP.Disjoint <> prove_perfect thm
R7015:7027 NominalSSP.Disjoint <> prove_perfect thm
R7041:7058 Crypt.package.pkg_rhl <> eq_rel_perf_ind_eq thm
R7041:7058 Crypt.package.pkg_rhl <> eq_rel_perf_ind_eq thm
R3720:3722 mathcomp.ssreflect.eqtype <> eqP def
R7116:7125 Crypt.package.pkg_composition <> cast_fun_K thm
R7116:7125 Crypt.package.pkg_composition <> cast_fun_K thm
R7116:7125 Crypt.package.pkg_composition <> cast_fun_K thm
R7138:7147 Crypt.package.pkg_rhl <> rsame_head thm
R7138:7147 Crypt.package.pkg_rhl <> rsame_head thm
R7165:7174 Crypt.package.pkg_rhl <> rsame_head thm
R7165:7174 Crypt.package.pkg_rhl <> rsame_head thm
R7266:7270 Crypt.package.pkg_rhl <> r_ret thm
R7266:7270 Crypt.package.pkg_rhl <> r_ret thm
prf 7291:7311 <> Correct_real_sim_perf
binder 7313:7313 <> p:141
R7320:7326 NominalSSP.Disjoint <> perfect def
R7329:7340 Project.Com <> ICorrect_com def
R7343:7352 Project.Com <> sig_to_com def
R7354:7354 Project.Com <> p:141 var
R7382:7386 NominalSSP.Disjoint <> ::sep_scope:x_'∘'_x not
R7364:7379 Project.Com <> Call_correct_sig def
R7381:7381 Project.Com <> p:141 var
R7387:7397 NominalSSP.Example.Sigma.Sigma <> Correct_sim def
R7399:7399 Project.Com <> p:141 var
R7403:7414 Project.Com <> Correct_real def
R7417:7426 Project.Com <> sig_to_com def
R7428:7428 Project.Com <> p:141 var
R7451:7461 NominalSSP.Example.Sigma.Sigma <> Correct_sim def
R7476:7489 NominalSSP.Disjoint <> sep_link_assoc thm
R7476:7489 NominalSSP.Disjoint <> sep_link_assoc thm
R7476:7489 NominalSSP.Disjoint <> sep_link_assoc thm
R7525:7540 NominalSSP.NomPackage <> share_link_assoc thm
R7525:7540 NominalSSP.NomPackage <> share_link_assoc thm
R7525:7540 NominalSSP.NomPackage <> share_link_assoc thm
R7555:7559 NominalSSP.Fresh <> move0 thm
R7555:7559 NominalSSP.Fresh <> move0 thm
R7555:7559 NominalSSP.Fresh <> move0 thm
R7577:7589 NominalSSP.Disjoint <> prove_perfect thm
R7577:7589 NominalSSP.Disjoint <> prove_perfect thm
R7606:7623 Crypt.package.pkg_rhl <> eq_rel_perf_ind_eq thm
R7606:7623 Crypt.package.pkg_rhl <> eq_rel_perf_ind_eq thm
R3720:3722 mathcomp.ssreflect.eqtype <> eqP def
R7696:7705 Crypt.package.pkg_composition <> cast_fun_K thm
R7696:7705 Crypt.package.pkg_composition <> cast_fun_K thm
R7696:7705 Crypt.package.pkg_composition <> cast_fun_K thm
R7696:7705 Crypt.package.pkg_composition <> cast_fun_K thm
R7696:7705 Crypt.package.pkg_composition <> cast_fun_K thm
R7723:7732 Crypt.package.pkg_rhl <> rsame_head thm
R7723:7732 Crypt.package.pkg_rhl <> rsame_head thm
R7754:7763 Crypt.package.pkg_rhl <> rsame_head thm
R7754:7763 Crypt.package.pkg_rhl <> rsame_head thm
R7899:7908 Crypt.package.pkg_rhl <> rsame_head thm
R7899:7908 Crypt.package.pkg_rhl <> rsame_head thm
R7954:7958 Crypt.package.pkg_rhl <> r_ret thm
R7954:7958 Crypt.package.pkg_rhl <> r_ret thm
prf 7994:8012 <> Com_Correct_Correct
R8017:8021 Coq.Unicode.Utf8_core <> ::type_scope:'∀'_x_'..'_x_','_x not
R8036:8041 Coq.Unicode.Utf8_core <> ::type_scope:'∀'_x_'..'_x_','_x not
R8026:8035 Project.Com <> raw_sigExt rec
binder 8022:8022 <> p:142
R8042:8052 Project.Com <> Adv_Correct def
R8055:8064 Project.Com <> sig_to_com def
R8066:8066 Project.Com <> p:142 var
R8070:8072 Coq.Unicode.Utf8_core <> :::'λ'_x_'..'_x_','_x not
R8074:8079 Coq.Unicode.Utf8_core <> :::'λ'_x_'..'_x_','_x not
binder 8073:8073 <> A:143
R8141:8143 mathcomp.algebra.ssralg <> ::ring_scope:x_'+'_x not
R8080:8085 NominalSSP.Disjoint <> AdvFor def
R8088:8092 NominalSSP.Example.Sigma.Sigma <> SHVZK def
R8094:8094 Project.Com <> p:142 var
R8099:8103 NominalSSP.Disjoint <> ::sep_scope:x_'∘'_x not
R8098:8098 Project.Com <> A:143 var
R8122:8126 NominalSSP.Disjoint <> ::sep_scope:x_'∘'_x not
R8104:8119 Project.Com <> Call_correct_sig def
R8121:8121 Project.Com <> p:142 var
R8127:8137 NominalSSP.Example.Sigma.Sigma <> Verify_call def
R8139:8139 Project.Com <> p:142 var
R8144:8149 NominalSSP.Disjoint <> AdvFor def
R8152:8164 NominalSSP.Example.Sigma.Sigma <> Correct def
R8166:8166 Project.Com <> p:142 var
R8171:8175 NominalSSP.Disjoint <> ::sep_scope:x_'∘'_x not
R8170:8170 Project.Com <> A:143 var
R8176:8191 Project.Com <> Call_correct_sig def
R8193:8193 Project.Com <> p:142 var
R8259:8263 NominalSSP.Disjoint <> ::sep_scope:x_'∘'_x not
R8241:8256 Project.Com <> Call_correct_sig def
R8264:8274 NominalSSP.Example.Sigma.Sigma <> Correct_sim def
R8259:8263 NominalSSP.Disjoint <> ::sep_scope:x_'∘'_x not
R8241:8256 Project.Com <> Call_correct_sig def
R8264:8274 NominalSSP.Example.Sigma.Sigma <> Correct_sim def
R8301:8307 NominalSSP.Disjoint <> Adv_sym thm
R8301:8307 NominalSSP.Disjoint <> Adv_sym thm
R8301:8307 NominalSSP.Disjoint <> Adv_sym thm
R8318:8338 Project.Com <> Correct_real_sim_perf prfax
R8318:8338 Project.Com <> Correct_real_sim_perf prfax
R8318:8338 Project.Com <> Correct_real_sim_perf prfax
R8351:8361 mathcomp.algebra.ssralg GRing add0r def
R8351:8361 mathcomp.algebra.ssralg GRing add0r def
R8351:8361 mathcomp.algebra.ssralg GRing add0r def
R8404:8408 NominalSSP.Disjoint <> ::sep_scope:x_'∘'_x not
R8386:8401 Project.Com <> Call_correct_sig def
R8409:8427 NominalSSP.Example.Sigma.Sigma <> Correct_ideal def
R8404:8408 NominalSSP.Disjoint <> ::sep_scope:x_'∘'_x not
R8386:8401 Project.Com <> Call_correct_sig def
R8409:8427 NominalSSP.Example.Sigma.Sigma <> Correct_ideal def
R8447:8468 Project.Com <> Correct_ideal_sim_perf thm
R8447:8468 Project.Com <> Correct_ideal_sim_perf thm
R8447:8468 Project.Com <> Correct_ideal_sim_perf thm
R8479:8489 mathcomp.algebra.ssralg GRing addr0 thm
R8479:8489 mathcomp.algebra.ssralg GRing addr0 thm
R8479:8489 mathcomp.algebra.ssralg GRing addr0 thm
R8502:8513 NominalSSP.Disjoint <> Adv_sep_link thm
R8502:8513 NominalSSP.Disjoint <> Adv_sep_link thm
R8502:8513 NominalSSP.Disjoint <> Adv_sep_link thm
R8525:8530 NominalSSP.Disjoint <> AdvFor def
R8533:8546 NominalSSP.Disjoint <> sep_link_assoc thm
R8525:8530 NominalSSP.Disjoint <> AdvFor def
R8525:8530 NominalSSP.Disjoint <> AdvFor def
R8533:8546 NominalSSP.Disjoint <> sep_link_assoc thm
R8533:8546 NominalSSP.Disjoint <> sep_link_assoc thm
R8561:8575 NominalSSP.Example.Sigma.Sigma <> Adv_Correct_sim thm
R8579:8590 NominalSSP.Disjoint <> ::sep_scope:'{'_'adversary'_x_';'_x_'}' not
R8601:8604 NominalSSP.Disjoint <> ::sep_scope:'{'_'adversary'_x_';'_x_'}' not
R8629:8629 NominalSSP.Disjoint <> ::sep_scope:'{'_'adversary'_x_';'_x_'}' not
R8591:8598 NominalSSP.Example.Sigma.Sigma <> ICorrect def
R8606:8610 NominalSSP.Disjoint <> ::sep_scope:x_'∘'_x not
R8611:8626 Project.Com <> Call_correct_sig def
R8606:8610 NominalSSP.Disjoint <> ::sep_scope:x_'∘'_x not
R8611:8626 Project.Com <> Call_correct_sig def
R8561:8575 NominalSSP.Example.Sigma.Sigma <> Adv_Correct_sim thm
R8579:8590 NominalSSP.Disjoint <> ::sep_scope:'{'_'adversary'_x_';'_x_'}' not
R8601:8604 NominalSSP.Disjoint <> ::sep_scope:'{'_'adversary'_x_';'_x_'}' not
R8629:8629 NominalSSP.Disjoint <> ::sep_scope:'{'_'adversary'_x_';'_x_'}' not
R8591:8598 NominalSSP.Example.Sigma.Sigma <> ICorrect def
R8606:8610 NominalSSP.Disjoint <> ::sep_scope:x_'∘'_x not
R8611:8626 Project.Com <> Call_correct_sig def
R8606:8610 NominalSSP.Disjoint <> ::sep_scope:x_'∘'_x not
R8611:8626 Project.Com <> Call_correct_sig def
def 8728:8741 <> Call_SHVZK_inp
R8747:8756 Project.Com <> raw_sigExt rec
binder 8744:8744 <> p:144
R8763:8768 NominalSSP.NomPackage <> module rec
R8771:8780 NominalSSP.Example.Sigma.Sigma <> Transcript abbrev
R8782:8782 Project.Com <> p:144 var
R8782:8782 Project.Com <> p:144 var
R8786:8796 Project.Com <> ICommitment def
R8799:8808 Project.Com <> sig_to_com def
R8810:8810 Project.Com <> p:144 var
R8820:8827 NominalSSP.NomPackage <> ::package_scope:'['_'module'_x_';'_x_']' not
R8835:8843 NominalSSP.NomPackage <> ::package_scope:'['_'module'_x_';'_x_']' not
R9311:9314 NominalSSP.NomPackage <> ::package_scope:'['_'module'_x_';'_x_']' not
R8828:8834 NominalSSP.NomPackage <> no_locs abbrev
R8844:8851 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_x_':'_x_')'_':'_x_'{'_x_'}' not
R8862:8865 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_x_':'_x_')'_':'_x_'{'_x_'}' not
R8867:8869 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_x_':'_x_')'_':'_x_'{'_x_'}' not
R8891:8894 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_x_':'_x_')'_':'_x_'{'_x_'}' not
R8923:8947 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_x_':'_x_')'_':'_x_'{'_x_'}' not
R9284:9310 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_x_':'_x_')'_':'_x_'{'_x_'}' not
R8852:8861 Project.Com <> COMMITMENT def
R8870:8877 Project.Com <> :pack_type::'''value'_x not
R8890:8890 Project.Com <> :pack_type::'''value'_x not
R8878:8887 Project.Com <> sig_to_com def
R8889:8889 Project.Com <> p:144 var
R8895:8895 Crypt.package.pkg_notation PackageNotation :pack_type::'('_x_')' not
R8922:8922 Crypt.package.pkg_notation PackageNotation :pack_type::'('_x_')' not
R8896:8908 Project.Com <> :pack_type::'''commitment'_x not
R8921:8921 Project.Com <> :pack_type::'''commitment'_x not
R8909:8918 Project.Com <> sig_to_com def
R8920:8920 Project.Com <> p:144 var
binder 8866:8866 <> v:145
R8948:8955 Crypt.package.pkg_notation PackageNotation ::package_scope:'#import'_x_'as'_x_';;'_x not
R9008:9011 Crypt.package.pkg_notation PackageNotation ::package_scope:'#import'_x_'as'_x_';;'_x not
R9017:9032 Crypt.package.pkg_notation PackageNotation ::package_scope:'#import'_x_'as'_x_';;'_x not
binder 9012:9016 <> TRANS:146
R9034:9038 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R9052:9068 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R9042:9050 Project.Com <> sampl_wit proj
R9039:9039 Project.Com <> p:144 var
binder 9033:9033 <> w:147
R9070:9074 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R9088:9103 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R9078:9084 Project.Com <> key_gen proj
R9075:9075 Project.Com <> p:144 var
R9087:9087 Project.Com <> w:147 var
binder 9069:9069 <> h:148
R9104:9111 Crypt.package.pkg_distr <> ::package_scope:'#assert'_x_';;'_x not
R9121:9136 Crypt.package.pkg_distr <> ::package_scope:'#assert'_x_';;'_x not
R9115:9115 NominalSSP.Example.Sigma.Sigma <> R proj
R9112:9112 Project.Com <> p:144 var
R9118:9118 Project.Com <> h:148 var
R9120:9120 Project.Com <> w:147 var
R9138:9142 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R9171:9186 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R9159:9169 Project.Com <> sampl_value proj
R9144:9153 Project.Com <> sig_to_com def
R9155:9155 Project.Com <> p:144 var
R9187:9187 Crypt.package.pkg_notation PackageNotation ::package_scope:''''_x_'←'_x_';;'_x not
R9200:9204 Crypt.package.pkg_notation PackageNotation ::package_scope:''''_x_'←'_x_';;'_x not
R9220:9246 Crypt.package.pkg_notation PackageNotation ::package_scope:''''_x_'←'_x_';;'_x not
R9205:9209 Project.Com <> TRANS:146 var
R9211:9211 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9213:9214 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9216:9217 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9219:9219 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9212:9212 Project.Com <> h:148 var
R9215:9215 Project.Com <> w:147 var
R9218:9218 Project.Com <> v:145 var
R9188:9188 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9190:9191 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9193:9194 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9196:9197 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9199:9199 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
binder 9198:9198 <> z:149
binder 9195:9195 <> e:150
binder 9192:9192 <> a:151
binder 9189:9189 <> h:152
binder 9188:9199 <> pat:153
R9247:9249 Crypt.package.pkg_core_definition <> ret constr
R9253:9255 Coq.ssr.ssreflect <> ::core_scope:x_':'_x not
R9272:9281 Project.Com <> Commitment proj
R9257:9266 Project.Com <> sig_to_com def
R9268:9268 Project.Com <> p:144 var
R9252:9252 Project.Com <> a:151 var
R8956:8960 Crypt.package.pkg_notation PackageNotation ::package_scope:'{'_'sig'_x_'}' not
R9007:9007 Crypt.package.pkg_notation PackageNotation ::package_scope:'{'_'sig'_x_'}' not
R8961:8963 Crypt.package.pkg_notation PackageNotation :pack_op::'#['_x_']'_':'_x_'→'_x not
R8974:8978 Crypt.package.pkg_notation PackageNotation :pack_op::'#['_x_']'_':'_x_'→'_x not
R8989:8993 Crypt.package.pkg_notation PackageNotation :pack_op::'#['_x_']'_':'_x_'→'_x not
R8964:8973 NominalSSP.Example.Sigma.Sigma <> TRANSCRIPT def
R8979:8979 Crypt.package.pkg_notation PackageNotation :pack_type::'('_x_')' not
R8988:8988 Crypt.package.pkg_notation PackageNotation :pack_type::'('_x_')' not
R8980:8986 NominalSSP.Example.Sigma.Sigma <> :pack_type::'''input'_x not
R8987:8987 Project.Com <> p:144 var
R8994:9005 NominalSSP.Example.Sigma.Sigma <> :pack_type::'''transcript'_x not
R9006:9006 Project.Com <> p:144 var
R8828:8834 NominalSSP.NomPackage <> no_locs abbrev
R8844:8851 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_x_':'_x_')'_':'_x_'{'_x_'}' not
R8862:8865 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_x_':'_x_')'_':'_x_'{'_x_'}' not
R8867:8869 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_x_':'_x_')'_':'_x_'{'_x_'}' not
R8891:8894 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_x_':'_x_')'_':'_x_'{'_x_'}' not
R8923:8947 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_x_':'_x_')'_':'_x_'{'_x_'}' not
R9284:9310 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_x_':'_x_')'_':'_x_'{'_x_'}' not
R8852:8861 Project.Com <> COMMITMENT def
R8870:8877 Project.Com <> :pack_type::'''value'_x not
R8890:8890 Project.Com <> :pack_type::'''value'_x not
R8878:8887 Project.Com <> sig_to_com def
R8889:8889 Project.Com <> p:144 var
R8895:8895 Crypt.package.pkg_notation PackageNotation :pack_type::'('_x_')' not
R8922:8922 Crypt.package.pkg_notation PackageNotation :pack_type::'('_x_')' not
R8896:8908 Project.Com <> :pack_type::'''commitment'_x not
R8921:8921 Project.Com <> :pack_type::'''commitment'_x not
R8909:8918 Project.Com <> sig_to_com def
R8920:8920 Project.Com <> p:144 var
binder 8866:8866 <> v:154
R8948:8955 Crypt.package.pkg_notation PackageNotation ::package_scope:'#import'_x_'as'_x_';;'_x not
R9008:9011 Crypt.package.pkg_notation PackageNotation ::package_scope:'#import'_x_'as'_x_';;'_x not
R9017:9032 Crypt.package.pkg_notation PackageNotation ::package_scope:'#import'_x_'as'_x_';;'_x not
binder 9012:9016 <> TRANS:155
R9034:9038 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R9052:9068 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R9042:9050 Project.Com <> sampl_wit proj
R9039:9039 Project.Com <> p:144 var
binder 9033:9033 <> w:156
R9070:9074 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R9088:9103 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R9078:9084 Project.Com <> key_gen proj
R9075:9075 Project.Com <> p:144 var
R9087:9087 Project.Com <> w:156 var
binder 9069:9069 <> h:157
R9104:9111 Crypt.package.pkg_distr <> ::package_scope:'#assert'_x_';;'_x not
R9121:9136 Crypt.package.pkg_distr <> ::package_scope:'#assert'_x_';;'_x not
R9115:9115 NominalSSP.Example.Sigma.Sigma <> R proj
R9112:9112 Project.Com <> p:144 var
R9118:9118 Project.Com <> h:157 var
R9120:9120 Project.Com <> w:156 var
R9138:9142 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R9171:9186 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R9159:9169 Project.Com <> sampl_value proj
R9144:9153 Project.Com <> sig_to_com def
R9155:9155 Project.Com <> p:144 var
R9187:9187 Crypt.package.pkg_notation PackageNotation ::package_scope:''''_x_'←'_x_';;'_x not
R9200:9204 Crypt.package.pkg_notation PackageNotation ::package_scope:''''_x_'←'_x_';;'_x not
R9220:9246 Crypt.package.pkg_notation PackageNotation ::package_scope:''''_x_'←'_x_';;'_x not
R9205:9209 Project.Com <> TRANS:155 var
R9211:9211 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9213:9214 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9216:9217 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9219:9219 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9212:9212 Project.Com <> h:157 var
R9215:9215 Project.Com <> w:156 var
R9218:9218 Project.Com <> v:154 var
R9188:9188 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9190:9191 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9193:9194 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9196:9197 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9199:9199 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
binder 9198:9198 <> z:158
binder 9195:9195 <> e:159
binder 9192:9192 <> a:160
binder 9189:9189 <> h:161
binder 9188:9199 <> pat:162
R9247:9249 Crypt.package.pkg_core_definition <> ret constr
R9253:9255 Coq.ssr.ssreflect <> ::core_scope:x_':'_x not
R9272:9281 Project.Com <> Commitment proj
R9257:9266 Project.Com <> sig_to_com def
R9268:9268 Project.Com <> p:144 var
R9252:9252 Project.Com <> a:160 var
R8956:8960 Crypt.package.pkg_notation PackageNotation ::package_scope:'{'_'sig'_x_'}' not
R9007:9007 Crypt.package.pkg_notation PackageNotation ::package_scope:'{'_'sig'_x_'}' not
R8961:8963 Crypt.package.pkg_notation PackageNotation :pack_op::'#['_x_']'_':'_x_'→'_x not
R8974:8978 Crypt.package.pkg_notation PackageNotation :pack_op::'#['_x_']'_':'_x_'→'_x not
R8989:8993 Crypt.package.pkg_notation PackageNotation :pack_op::'#['_x_']'_':'_x_'→'_x not
R8964:8973 NominalSSP.Example.Sigma.Sigma <> TRANSCRIPT def
R8979:8979 Crypt.package.pkg_notation PackageNotation :pack_type::'('_x_')' not
R8988:8988 Crypt.package.pkg_notation PackageNotation :pack_type::'('_x_')' not
R8980:8986 NominalSSP.Example.Sigma.Sigma <> :pack_type::'''input'_x not
R8987:8987 Project.Com <> p:144 var
R8994:9005 NominalSSP.Example.Sigma.Sigma <> :pack_type::'''transcript'_x not
R9006:9006 Project.Com <> p:144 var
def 9367:9380 <> Call_SHVZK_sam
R9386:9395 Project.Com <> raw_sigExt rec
binder 9383:9383 <> p:163
R9402:9407 NominalSSP.NomPackage <> module rec
R9410:9419 NominalSSP.Example.Sigma.Sigma <> Transcript abbrev
R9421:9421 Project.Com <> p:163 var
R9421:9421 Project.Com <> p:163 var
R9425:9435 Project.Com <> ICommitment def
R9438:9447 Project.Com <> sig_to_com def
R9449:9449 Project.Com <> p:163 var
R9459:9466 NominalSSP.NomPackage <> ::package_scope:'['_'module'_x_';'_x_']' not
R9474:9482 NominalSSP.NomPackage <> ::package_scope:'['_'module'_x_';'_x_']' not
R9950:9953 NominalSSP.NomPackage <> ::package_scope:'['_'module'_x_';'_x_']' not
R9467:9473 NominalSSP.NomPackage <> no_locs abbrev
R9483:9490 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_x_':'_x_')'_':'_x_'{'_x_'}' not
R9501:9504 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_x_':'_x_')'_':'_x_'{'_x_'}' not
R9506:9508 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_x_':'_x_')'_':'_x_'{'_x_'}' not
R9530:9533 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_x_':'_x_')'_':'_x_'{'_x_'}' not
R9562:9586 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_x_':'_x_')'_':'_x_'{'_x_'}' not
R9923:9949 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_x_':'_x_')'_':'_x_'{'_x_'}' not
R9491:9500 Project.Com <> COMMITMENT def
R9509:9516 Project.Com <> :pack_type::'''value'_x not
R9529:9529 Project.Com <> :pack_type::'''value'_x not
R9517:9526 Project.Com <> sig_to_com def
R9528:9528 Project.Com <> p:163 var
R9534:9534 Crypt.package.pkg_notation PackageNotation :pack_type::'('_x_')' not
R9561:9561 Crypt.package.pkg_notation PackageNotation :pack_type::'('_x_')' not
R9535:9547 Project.Com <> :pack_type::'''commitment'_x not
R9560:9560 Project.Com <> :pack_type::'''commitment'_x not
R9548:9557 Project.Com <> sig_to_com def
R9559:9559 Project.Com <> p:163 var
binder 9505:9505 <> v:164
R9587:9594 Crypt.package.pkg_notation PackageNotation ::package_scope:'#import'_x_'as'_x_';;'_x not
R9647:9650 Crypt.package.pkg_notation PackageNotation ::package_scope:'#import'_x_'as'_x_';;'_x not
R9656:9671 Crypt.package.pkg_notation PackageNotation ::package_scope:'#import'_x_'as'_x_';;'_x not
binder 9651:9655 <> TRANS:165
R9673:9677 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R9691:9707 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R9681:9689 Project.Com <> sampl_wit proj
R9678:9678 Project.Com <> p:163 var
binder 9672:9672 <> w:166
R9709:9713 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R9727:9742 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R9717:9723 Project.Com <> key_gen proj
R9714:9714 Project.Com <> p:163 var
R9726:9726 Project.Com <> w:166 var
binder 9708:9708 <> h:167
R9743:9750 Crypt.package.pkg_distr <> ::package_scope:'#assert'_x_';;'_x not
R9760:9775 Crypt.package.pkg_distr <> ::package_scope:'#assert'_x_';;'_x not
R9754:9754 NominalSSP.Example.Sigma.Sigma <> R proj
R9751:9751 Project.Com <> p:163 var
R9757:9757 Project.Com <> h:167 var
R9759:9759 Project.Com <> w:166 var
R9777:9781 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R9810:9825 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R9798:9808 Project.Com <> sampl_value proj
R9783:9792 Project.Com <> sig_to_com def
R9794:9794 Project.Com <> p:163 var
binder 9776:9776 <> u:168
R9826:9826 Crypt.package.pkg_notation PackageNotation ::package_scope:''''_x_'←'_x_';;'_x not
R9839:9843 Crypt.package.pkg_notation PackageNotation ::package_scope:''''_x_'←'_x_';;'_x not
R9859:9885 Crypt.package.pkg_notation PackageNotation ::package_scope:''''_x_'←'_x_';;'_x not
R9844:9848 Project.Com <> TRANS:165 var
R9850:9850 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9852:9853 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9855:9856 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9858:9858 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9851:9851 Project.Com <> h:167 var
R9854:9854 Project.Com <> w:166 var
R9857:9857 Project.Com <> u:168 var
R9827:9827 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9829:9830 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9832:9833 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9835:9836 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9838:9838 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
binder 9837:9837 <> z:169
binder 9834:9834 <> e:170
binder 9831:9831 <> a:171
binder 9828:9828 <> h:172
binder 9827:9838 <> pat:173
R9886:9888 Crypt.package.pkg_core_definition <> ret constr
R9892:9894 Coq.ssr.ssreflect <> ::core_scope:x_':'_x not
R9911:9920 Project.Com <> Commitment proj
R9896:9905 Project.Com <> sig_to_com def
R9907:9907 Project.Com <> p:163 var
R9891:9891 Project.Com <> a:171 var
R9595:9599 Crypt.package.pkg_notation PackageNotation ::package_scope:'{'_'sig'_x_'}' not
R9646:9646 Crypt.package.pkg_notation PackageNotation ::package_scope:'{'_'sig'_x_'}' not
R9600:9602 Crypt.package.pkg_notation PackageNotation :pack_op::'#['_x_']'_':'_x_'→'_x not
R9613:9617 Crypt.package.pkg_notation PackageNotation :pack_op::'#['_x_']'_':'_x_'→'_x not
R9628:9632 Crypt.package.pkg_notation PackageNotation :pack_op::'#['_x_']'_':'_x_'→'_x not
R9603:9612 NominalSSP.Example.Sigma.Sigma <> TRANSCRIPT def
R9618:9618 Crypt.package.pkg_notation PackageNotation :pack_type::'('_x_')' not
R9627:9627 Crypt.package.pkg_notation PackageNotation :pack_type::'('_x_')' not
R9619:9625 NominalSSP.Example.Sigma.Sigma <> :pack_type::'''input'_x not
R9626:9626 Project.Com <> p:163 var
R9633:9644 NominalSSP.Example.Sigma.Sigma <> :pack_type::'''transcript'_x not
R9645:9645 Project.Com <> p:163 var
R9467:9473 NominalSSP.NomPackage <> no_locs abbrev
R9483:9490 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_x_':'_x_')'_':'_x_'{'_x_'}' not
R9501:9504 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_x_':'_x_')'_':'_x_'{'_x_'}' not
R9506:9508 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_x_':'_x_')'_':'_x_'{'_x_'}' not
R9530:9533 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_x_':'_x_')'_':'_x_'{'_x_'}' not
R9562:9586 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_x_':'_x_')'_':'_x_'{'_x_'}' not
R9923:9949 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_x_':'_x_')'_':'_x_'{'_x_'}' not
R9491:9500 Project.Com <> COMMITMENT def
R9509:9516 Project.Com <> :pack_type::'''value'_x not
R9529:9529 Project.Com <> :pack_type::'''value'_x not
R9517:9526 Project.Com <> sig_to_com def
R9528:9528 Project.Com <> p:163 var
R9534:9534 Crypt.package.pkg_notation PackageNotation :pack_type::'('_x_')' not
R9561:9561 Crypt.package.pkg_notation PackageNotation :pack_type::'('_x_')' not
R9535:9547 Project.Com <> :pack_type::'''commitment'_x not
R9560:9560 Project.Com <> :pack_type::'''commitment'_x not
R9548:9557 Project.Com <> sig_to_com def
R9559:9559 Project.Com <> p:163 var
binder 9505:9505 <> v:174
R9587:9594 Crypt.package.pkg_notation PackageNotation ::package_scope:'#import'_x_'as'_x_';;'_x not
R9647:9650 Crypt.package.pkg_notation PackageNotation ::package_scope:'#import'_x_'as'_x_';;'_x not
R9656:9671 Crypt.package.pkg_notation PackageNotation ::package_scope:'#import'_x_'as'_x_';;'_x not
binder 9651:9655 <> TRANS:175
R9673:9677 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R9691:9707 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R9681:9689 Project.Com <> sampl_wit proj
R9678:9678 Project.Com <> p:163 var
binder 9672:9672 <> w:176
R9709:9713 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R9727:9742 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R9717:9723 Project.Com <> key_gen proj
R9714:9714 Project.Com <> p:163 var
R9726:9726 Project.Com <> w:176 var
binder 9708:9708 <> h:177
R9743:9750 Crypt.package.pkg_distr <> ::package_scope:'#assert'_x_';;'_x not
R9760:9775 Crypt.package.pkg_distr <> ::package_scope:'#assert'_x_';;'_x not
R9754:9754 NominalSSP.Example.Sigma.Sigma <> R proj
R9751:9751 Project.Com <> p:163 var
R9757:9757 Project.Com <> h:177 var
R9759:9759 Project.Com <> w:176 var
R9777:9781 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R9810:9825 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R9798:9808 Project.Com <> sampl_value proj
R9783:9792 Project.Com <> sig_to_com def
R9794:9794 Project.Com <> p:163 var
binder 9776:9776 <> u:178
R9826:9826 Crypt.package.pkg_notation PackageNotation ::package_scope:''''_x_'←'_x_';;'_x not
R9839:9843 Crypt.package.pkg_notation PackageNotation ::package_scope:''''_x_'←'_x_';;'_x not
R9859:9885 Crypt.package.pkg_notation PackageNotation ::package_scope:''''_x_'←'_x_';;'_x not
R9844:9848 Project.Com <> TRANS:175 var
R9850:9850 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9852:9853 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9855:9856 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9858:9858 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9851:9851 Project.Com <> h:177 var
R9854:9854 Project.Com <> w:176 var
R9857:9857 Project.Com <> u:178 var
R9827:9827 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9829:9830 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9832:9833 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9835:9836 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R9838:9838 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
binder 9837:9837 <> z:179
binder 9834:9834 <> e:180
binder 9831:9831 <> a:181
binder 9828:9828 <> h:182
binder 9827:9838 <> pat:183
R9886:9888 Crypt.package.pkg_core_definition <> ret constr
R9892:9894 Coq.ssr.ssreflect <> ::core_scope:x_':'_x not
R9911:9920 Project.Com <> Commitment proj
R9896:9905 Project.Com <> sig_to_com def
R9907:9907 Project.Com <> p:163 var
R9891:9891 Project.Com <> a:181 var
R9595:9599 Crypt.package.pkg_notation PackageNotation ::package_scope:'{'_'sig'_x_'}' not
R9646:9646 Crypt.package.pkg_notation PackageNotation ::package_scope:'{'_'sig'_x_'}' not
R9600:9602 Crypt.package.pkg_notation PackageNotation :pack_op::'#['_x_']'_':'_x_'→'_x not
R9613:9617 Crypt.package.pkg_notation PackageNotation :pack_op::'#['_x_']'_':'_x_'→'_x not
R9628:9632 Crypt.package.pkg_notation PackageNotation :pack_op::'#['_x_']'_':'_x_'→'_x not
R9603:9612 NominalSSP.Example.Sigma.Sigma <> TRANSCRIPT def
R9618:9618 Crypt.package.pkg_notation PackageNotation :pack_type::'('_x_')' not
R9627:9627 Crypt.package.pkg_notation PackageNotation :pack_type::'('_x_')' not
R9619:9625 NominalSSP.Example.Sigma.Sigma <> :pack_type::'''input'_x not
R9626:9626 Project.Com <> p:163 var
R9633:9644 NominalSSP.Example.Sigma.Sigma <> :pack_type::'''transcript'_x not
R9645:9645 Project.Com <> p:163 var
prf 10009:10036 <> Hiding_real_SHVZK_ideal_perf
binder 10038:10038 <> p:184
R10045:10051 NominalSSP.Disjoint <> perfect def
R10054:10064 Project.Com <> ICommitment def
R10067:10076 Project.Com <> sig_to_com def
R10078:10078 Project.Com <> p:184 var
R10088:10098 Project.Com <> Hiding_real def
R10101:10110 Project.Com <> sig_to_com def
R10112:10112 Project.Com <> p:184 var
R10133:10137 NominalSSP.Disjoint <> ::sep_scope:x_'∘'_x not
R10117:10130 Project.Com <> Call_SHVZK_inp def
R10132:10132 Project.Com <> p:184 var
R10138:10148 NominalSSP.Example.Sigma.Sigma <> SHVZK_ideal def
R10150:10150 Project.Com <> p:184 var
R10192:10204 NominalSSP.Disjoint <> prove_perfect thm
R10192:10204 NominalSSP.Disjoint <> prove_perfect thm
R10218:10235 Crypt.package.pkg_rhl <> eq_rel_perf_ind_eq thm
R10218:10235 Crypt.package.pkg_rhl <> eq_rel_perf_ind_eq thm
R3720:3722 mathcomp.ssreflect.eqtype <> eqP def
R10293:10302 Crypt.package.pkg_composition <> cast_fun_K thm
R10293:10302 Crypt.package.pkg_composition <> cast_fun_K thm
R10293:10302 Crypt.package.pkg_composition <> cast_fun_K thm
R10315:10324 Crypt.package.pkg_rhl <> rsame_head thm
R10315:10324 Crypt.package.pkg_rhl <> rsame_head thm
R10342:10351 Crypt.package.pkg_rhl <> rsame_head thm
R10342:10351 Crypt.package.pkg_rhl <> rsame_head thm
R10424:10433 Crypt.package.pkg_rhl <> rsame_head thm
R10424:10433 Crypt.package.pkg_rhl <> rsame_head thm
R10527:10536 Crypt.package.pkg_rhl <> rsame_head thm
R10527:10536 Crypt.package.pkg_rhl <> rsame_head thm
R10574:10578 Crypt.package.pkg_rhl <> r_ret thm
R10574:10578 Crypt.package.pkg_rhl <> r_ret thm
prf 10647:10675 <> Hiding_ideal_SHVZK_ideal_perf
binder 10677:10677 <> p:185
R10684:10690 NominalSSP.Disjoint <> perfect def
R10693:10703 Project.Com <> ICommitment def
R10706:10715 Project.Com <> sig_to_com def
R10717:10717 Project.Com <> p:185 var
R10743:10747 NominalSSP.Disjoint <> ::sep_scope:x_'∘'_x not
R10727:10740 Project.Com <> Call_SHVZK_sam def
R10742:10742 Project.Com <> p:185 var
R10748:10758 NominalSSP.Example.Sigma.Sigma <> SHVZK_ideal def
R10760:10760 Project.Com <> p:185 var
R10764:10775 Project.Com <> Hiding_ideal def
R10778:10787 Project.Com <> sig_to_com def
R10789:10789 Project.Com <> p:185 var
R10832:10844 NominalSSP.Disjoint <> prove_perfect thm
R10832:10844 NominalSSP.Disjoint <> prove_perfect thm
R10858:10875 Crypt.package.pkg_rhl <> eq_rel_perf_ind_eq thm
R10858:10875 Crypt.package.pkg_rhl <> eq_rel_perf_ind_eq thm
R3720:3722 mathcomp.ssreflect.eqtype <> eqP def
R10933:10942 Crypt.package.pkg_composition <> cast_fun_K thm
R10933:10942 Crypt.package.pkg_composition <> cast_fun_K thm
R10933:10942 Crypt.package.pkg_composition <> cast_fun_K thm
R10955:10964 Crypt.package.pkg_rhl <> rsame_head thm
R10955:10964 Crypt.package.pkg_rhl <> rsame_head thm
R10982:10991 Crypt.package.pkg_rhl <> rsame_head thm
R10982:10991 Crypt.package.pkg_rhl <> rsame_head thm
R11064:11073 Crypt.package.pkg_rhl <> rsame_head thm
R11064:11073 Crypt.package.pkg_rhl <> rsame_head thm
R11167:11176 Crypt.package.pkg_rhl <> rsame_head thm
R11167:11176 Crypt.package.pkg_rhl <> rsame_head thm
R11214:11218 Crypt.package.pkg_rhl <> r_ret thm
R11214:11218 Crypt.package.pkg_rhl <> r_ret thm
prf 11241:11248 <> Red_perf
R11254:11263 Project.Com <> raw_sigExt rec
binder 11251:11251 <> p:186
R11270:11270 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11318:11325 Coq.Init.Logic <> ::type_scope:x_'->'_x not
binder 11278:11278 <> h:187
binder 11280:11280 <> w:188
binder 11282:11282 <> a:189
binder 11284:11284 <> s:190
binder 11286:11286 <> e:191
R11289:11294 NominalSSP.SSProve <> NoFail ind
R11297:11304 NominalSSP.Example.Sigma.Sigma <> response proj
R11306:11306 Project.Com <> p:186 var
R11308:11308 Project.Com <> h:187 var
R11310:11310 Project.Com <> w:188 var
R11312:11312 Project.Com <> a:189 var
R11314:11314 Project.Com <> s:190 var
R11316:11316 Project.Com <> e:191 var
R11326:11332 NominalSSP.Disjoint <> perfect def
R11335:11345 Project.Com <> ICommitment def
R11348:11357 Project.Com <> sig_to_com def
R11359:11359 Project.Com <> p:186 var
R11387:11391 NominalSSP.Disjoint <> ::sep_scope:x_'∘'_x not
R11371:11384 Project.Com <> Call_SHVZK_inp def
R11386:11386 Project.Com <> p:186 var
R11392:11401 NominalSSP.Example.Sigma.Sigma <> SHVZK_real def
R11403:11403 Project.Com <> p:186 var
R11423:11427 NominalSSP.Disjoint <> ::sep_scope:x_'∘'_x not
R11407:11420 Project.Com <> Call_SHVZK_sam def
R11422:11422 Project.Com <> p:186 var
R11428:11437 NominalSSP.Example.Sigma.Sigma <> SHVZK_real def
R11439:11439 Project.Com <> p:186 var
R11498:11510 NominalSSP.Disjoint <> prove_perfect thm
R11498:11510 NominalSSP.Disjoint <> prove_perfect thm
R11524:11541 Crypt.package.pkg_rhl <> eq_rel_perf_ind_eq thm
R11524:11541 Crypt.package.pkg_rhl <> eq_rel_perf_ind_eq thm
R3720:3722 mathcomp.ssreflect.eqtype <> eqP def
R11600:11609 Crypt.package.pkg_composition <> cast_fun_K thm
R11600:11609 Crypt.package.pkg_composition <> cast_fun_K thm
R11600:11609 Crypt.package.pkg_composition <> cast_fun_K thm
R11646:11655 Crypt.package.pkg_rhl <> rsame_head thm
R11646:11655 Crypt.package.pkg_rhl <> rsame_head thm
R11674:11683 Crypt.package.pkg_rhl <> rsame_head thm
R11674:11683 Crypt.package.pkg_rhl <> rsame_head thm
R11729:11738 Crypt.package.pkg_rhl <> rsame_head thm
R11729:11738 Crypt.package.pkg_rhl <> rsame_head thm
R11840:11849 Crypt.package.pkg_rhl <> rsame_head thm
R11840:11849 Crypt.package.pkg_rhl <> rsame_head thm
R11886:11895 NominalSSP.SSProve <> r_NoFail_L thm
R11886:11895 NominalSSP.SSProve <> r_NoFail_L thm
R11936:11945 NominalSSP.SSProve <> r_NoFail_R thm
R11936:11945 NominalSSP.SSProve <> r_NoFail_R thm
R11990:11994 Crypt.package.pkg_rhl <> r_ret thm
R11990:11994 Crypt.package.pkg_rhl <> r_ret thm
prf 12040:12055 <> Com_hiding_SHVZK
R12061:12065 Coq.Unicode.Utf8_core <> ::type_scope:'∀'_x_'..'_x_','_x not
R12080:12085 Coq.Unicode.Utf8_core <> ::type_scope:'∀'_x_'..'_x_','_x not
R12070:12079 Project.Com <> raw_sigExt rec
binder 12066:12066 <> p:192
R12086:12086 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12134:12140 Coq.Init.Logic <> ::type_scope:x_'->'_x not
binder 12094:12094 <> h:193
binder 12096:12096 <> w:194
binder 12098:12098 <> a:195
binder 12100:12100 <> s:196
binder 12102:12102 <> e:197
R12105:12110 NominalSSP.SSProve <> NoFail ind
R12113:12120 NominalSSP.Example.Sigma.Sigma <> response proj
R12122:12122 Project.Com <> p:192 var
R12124:12124 Project.Com <> h:193 var
R12126:12126 Project.Com <> w:194 var
R12128:12128 Project.Com <> a:195 var
R12130:12130 Project.Com <> s:196 var
R12132:12132 Project.Com <> e:197 var
R12141:12150 Project.Com <> Adv_Hiding def
R12153:12162 Project.Com <> sig_to_com def
R12164:12164 Project.Com <> p:192 var
R12168:12170 Coq.Unicode.Utf8_core <> :::'λ'_x_'..'_x_','_x not
R12172:12177 Coq.Unicode.Utf8_core <> :::'λ'_x_'..'_x_','_x not
binder 12171:12171 <> A:198
R12219:12225 mathcomp.algebra.ssralg <> ::ring_scope:x_'+'_x not
R12178:12183 NominalSSP.Disjoint <> AdvFor def
R12186:12190 NominalSSP.Example.Sigma.Sigma <> SHVZK def
R12192:12192 Project.Com <> p:192 var
R12197:12201 NominalSSP.Disjoint <> ::sep_scope:x_'∘'_x not
R12196:12196 Project.Com <> A:198 var
R12202:12215 Project.Com <> Call_SHVZK_inp def
R12217:12217 Project.Com <> p:192 var
R12226:12231 NominalSSP.Disjoint <> AdvFor def
R12234:12238 NominalSSP.Example.Sigma.Sigma <> SHVZK def
R12240:12240 Project.Com <> p:192 var
R12245:12249 NominalSSP.Disjoint <> ::sep_scope:x_'∘'_x not
R12244:12244 Project.Com <> A:198 var
R12250:12263 Project.Com <> Call_SHVZK_sam def
R12265:12265 Project.Com <> p:192 var
R12332:12336 NominalSSP.Disjoint <> ::sep_scope:x_'∘'_x not
R12316:12329 Project.Com <> Call_SHVZK_inp def
R12337:12347 NominalSSP.Example.Sigma.Sigma <> SHVZK_ideal def
R12332:12336 NominalSSP.Disjoint <> ::sep_scope:x_'∘'_x not
R12316:12329 Project.Com <> Call_SHVZK_inp def
R12337:12347 NominalSSP.Example.Sigma.Sigma <> SHVZK_ideal def
R12367:12394 Project.Com <> Hiding_real_SHVZK_ideal_perf thm
R12367:12394 Project.Com <> Hiding_real_SHVZK_ideal_perf thm
R12367:12394 Project.Com <> Hiding_real_SHVZK_ideal_perf thm
R12407:12417 mathcomp.algebra.ssralg GRing add0r def
R12407:12417 mathcomp.algebra.ssralg GRing add0r def
R12407:12417 mathcomp.algebra.ssralg GRing add0r def
R12458:12462 NominalSSP.Disjoint <> ::sep_scope:x_'∘'_x not
R12442:12455 Project.Com <> Call_SHVZK_sam def
R12463:12473 NominalSSP.Example.Sigma.Sigma <> SHVZK_ideal def
R12458:12462 NominalSSP.Disjoint <> ::sep_scope:x_'∘'_x not
R12442:12455 Project.Com <> Call_SHVZK_sam def
R12463:12473 NominalSSP.Example.Sigma.Sigma <> SHVZK_ideal def
R12493:12521 Project.Com <> Hiding_ideal_SHVZK_ideal_perf thm
R12493:12521 Project.Com <> Hiding_ideal_SHVZK_ideal_perf thm
R12493:12521 Project.Com <> Hiding_ideal_SHVZK_ideal_perf thm
R12534:12544 mathcomp.algebra.ssralg GRing addr0 thm
R12534:12544 mathcomp.algebra.ssralg GRing addr0 thm
R12534:12544 mathcomp.algebra.ssralg GRing addr0 thm
R12585:12589 NominalSSP.Disjoint <> ::sep_scope:x_'∘'_x not
R12569:12582 Project.Com <> Call_SHVZK_sam def
R12590:12599 NominalSSP.Example.Sigma.Sigma <> SHVZK_real def
R12585:12589 NominalSSP.Disjoint <> ::sep_scope:x_'∘'_x not
R12569:12582 Project.Com <> Call_SHVZK_sam def
R12590:12599 NominalSSP.Example.Sigma.Sigma <> SHVZK_real def
R12617:12620 mathcomp.algebra.ssrnum Num.Theory lerD thm
R12617:12620 mathcomp.algebra.ssrnum Num.Theory lerD thm
R12663:12667 NominalSSP.Disjoint <> ::sep_scope:x_'∘'_x not
R12647:12660 Project.Com <> Call_SHVZK_inp def
R12668:12677 NominalSSP.Example.Sigma.Sigma <> SHVZK_real def
R12663:12667 NominalSSP.Disjoint <> ::sep_scope:x_'∘'_x not
R12647:12660 Project.Com <> Call_SHVZK_inp def
R12668:12677 NominalSSP.Example.Sigma.Sigma <> SHVZK_real def
R12699:12706 Project.Com <> Red_perf thm
R12699:12706 Project.Com <> Red_perf thm
R12699:12706 Project.Com <> Red_perf thm
R12723:12733 mathcomp.algebra.ssralg GRing addr0 thm
R12723:12733 mathcomp.algebra.ssralg GRing addr0 thm
R12723:12733 mathcomp.algebra.ssralg GRing addr0 thm
R12750:12761 NominalSSP.Disjoint <> Adv_sep_link thm
R12763:12769 NominalSSP.Disjoint <> Adv_sym thm
R12750:12761 NominalSSP.Disjoint <> Adv_sep_link thm
R12750:12761 NominalSSP.Disjoint <> Adv_sep_link thm
R12763:12769 NominalSSP.Disjoint <> Adv_sym thm
R12763:12769 NominalSSP.Disjoint <> Adv_sym thm
R12784:12790 mathcomp.ssreflect.order Order.POrderTheory le_refl def
R12784:12790 mathcomp.ssreflect.order Order.POrderTheory le_refl def
R12820:12831 NominalSSP.Disjoint <> Adv_sep_link thm
R12820:12831 NominalSSP.Disjoint <> Adv_sep_link thm
R12820:12831 NominalSSP.Disjoint <> Adv_sep_link thm
R12844:12850 mathcomp.ssreflect.order Order.POrderTheory le_refl def
R12844:12850 mathcomp.ssreflect.order Order.POrderTheory le_refl def
def 12918:12931 <> Call_Soundness
R12937:12946 Project.Com <> raw_sigExt rec
binder 12934:12934 <> p:199
R12954:12959 NominalSSP.NomPackage <> module rec
R12962:12970 NominalSSP.Example.Sigma.Sigma <> Soundness abbrev
R12972:12972 Project.Com <> p:199 var
R12972:12972 Project.Com <> p:199 var
R12972:12972 Project.Com <> p:199 var
R12972:12972 Project.Com <> p:199 var
R12976:12983 Project.Com <> IBinding def
R12986:12995 Project.Com <> sig_to_com def
R12997:12997 Project.Com <> p:199 var
R13007:13014 NominalSSP.NomPackage <> ::package_scope:'['_'module'_x_';'_x_']' not
R13022:13030 NominalSSP.NomPackage <> ::package_scope:'['_'module'_x_';'_x_']' not
R13326:13329 NominalSSP.NomPackage <> ::package_scope:'['_'module'_x_';'_x_']' not
R13015:13021 NominalSSP.NomPackage <> no_locs abbrev
R13031:13038 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_''''_x_':'_x_')'_':'_x_'{'_x_'}' not
R13046:13050 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_''''_x_':'_x_')'_':'_x_'{'_x_'}' not
R13068:13070 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_''''_x_':'_x_')'_':'_x_'{'_x_'}' not
R13094:13097 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_''''_x_':'_x_')'_':'_x_'{'_x_'}' not
R13103:13127 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_''''_x_':'_x_')'_':'_x_'{'_x_'}' not
R13314:13325 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_''''_x_':'_x_')'_':'_x_'{'_x_'}' not
R13039:13045 Project.Com <> BINDING def
R13071:13080 Project.Com <> :pack_type::'''binding'_x not
R13093:13093 Project.Com <> :pack_type::'''binding'_x not
R13081:13090 Project.Com <> sig_to_com def
R13092:13092 Project.Com <> p:199 var
R13098:13102 Crypt.package.pkg_notation PackageNotation :pack_type::'''bool' not
R13051:13051 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13053:13054 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13056:13057 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13059:13060 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13063:13064 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13067:13067 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
binder 13065:13066 <> o':200
binder 13061:13062 <> v':201
binder 13058:13058 <> o:202
binder 13055:13055 <> v:203
binder 13052:13052 <> c:204
binder 13051:13067 <> pat:205
R13129:13133 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R13156:13171 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R13150:13154 Project.Com <> setup proj
R13135:13144 Project.Com <> sig_to_com def
R13146:13146 Project.Com <> p:199 var
binder 13128:13128 <> k:206
R13172:13179 Crypt.package.pkg_notation PackageNotation ::package_scope:'#import'_x_'as'_x_';;'_x not
R13227:13230 Crypt.package.pkg_notation PackageNotation ::package_scope:'#import'_x_'as'_x_';;'_x not
R13236:13251 Crypt.package.pkg_notation PackageNotation ::package_scope:'#import'_x_'as'_x_';;'_x not
binder 13231:13235 <> SOUND:207
R13252:13252 Crypt.package.pkg_notation PackageNotation ::package_scope:''''_x_'←'_x_';;'_x not
R13254:13258 Crypt.package.pkg_notation PackageNotation ::package_scope:''''_x_'←'_x_';;'_x not
R13293:13308 Crypt.package.pkg_notation PackageNotation ::package_scope:''''_x_'←'_x_';;'_x not
R13259:13263 Project.Com <> SOUND:207 var
R13265:13265 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13272:13273 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13292:13292 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13266:13266 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13268:13269 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13271:13271 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13267:13267 Project.Com <> k:206 var
R13270:13270 Project.Com <> c:204 var
R13274:13274 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13281:13282 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13291:13291 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13275:13275 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13277:13278 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13280:13280 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13276:13276 Project.Com <> v:203 var
R13279:13279 Project.Com <> o:202 var
R13283:13283 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13286:13287 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13290:13290 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13284:13285 Project.Com <> v':201 var
R13288:13289 Project.Com <> o':200 var
binder 13253:13253 <> b:208
binder 13253:13253 <> b:209
R13309:13311 Crypt.package.pkg_core_definition <> ret constr
R13313:13313 Project.Com <> b:208 var
R13180:13184 Crypt.package.pkg_notation PackageNotation ::package_scope:'{'_'sig'_x_'}' not
R13226:13226 Crypt.package.pkg_notation PackageNotation ::package_scope:'{'_'sig'_x_'}' not
R13185:13187 Crypt.package.pkg_notation PackageNotation :pack_op::'#['_x_']'_':'_x_'→'_x not
R13197:13201 Crypt.package.pkg_notation PackageNotation :pack_op::'#['_x_']'_':'_x_'→'_x not
R13216:13220 Crypt.package.pkg_notation PackageNotation :pack_op::'#['_x_']'_':'_x_'→'_x not
R13188:13196 NominalSSP.Example.Sigma.Sigma <> SOUNDNESS def
R13202:13202 Crypt.package.pkg_notation PackageNotation :pack_type::'('_x_')' not
R13215:13215 Crypt.package.pkg_notation PackageNotation :pack_type::'('_x_')' not
R13203:13213 NominalSSP.Example.Sigma.Sigma <> :pack_type::'''soundness'_x not
R13214:13214 Project.Com <> p:199 var
R13214:13214 Project.Com <> p:199 var
R13214:13214 Project.Com <> p:199 var
R13214:13214 Project.Com <> p:199 var
R13221:13225 Crypt.package.pkg_notation PackageNotation :pack_type::'''bool' not
R13015:13021 NominalSSP.NomPackage <> no_locs abbrev
R13031:13038 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_''''_x_':'_x_')'_':'_x_'{'_x_'}' not
R13046:13050 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_''''_x_':'_x_')'_':'_x_'{'_x_'}' not
R13068:13070 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_''''_x_':'_x_')'_':'_x_'{'_x_'}' not
R13094:13097 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_''''_x_':'_x_')'_':'_x_'{'_x_'}' not
R13103:13127 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_''''_x_':'_x_')'_':'_x_'{'_x_'}' not
R13314:13325 Crypt.package.pkg_notation PackageNotation :package:package_scope:'#def'_'#['_x_']'_'('_''''_x_':'_x_')'_':'_x_'{'_x_'}' not
R13039:13045 Project.Com <> BINDING def
R13071:13080 Project.Com <> :pack_type::'''binding'_x not
R13093:13093 Project.Com <> :pack_type::'''binding'_x not
R13081:13090 Project.Com <> sig_to_com def
R13092:13092 Project.Com <> p:199 var
R13098:13102 Crypt.package.pkg_notation PackageNotation :pack_type::'''bool' not
R13051:13051 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13053:13054 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13056:13057 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13059:13060 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13063:13064 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13067:13067 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
binder 13065:13066 <> o':210
binder 13061:13062 <> v':211
binder 13058:13058 <> o:212
binder 13055:13055 <> v:213
binder 13052:13052 <> c:214
binder 13051:13067 <> pat:215
R13129:13133 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R13156:13171 Crypt.package.pkg_notation PackageNotation ::package_scope:x_'←'_x_';;'_x not
R13150:13154 Project.Com <> setup proj
R13135:13144 Project.Com <> sig_to_com def
R13146:13146 Project.Com <> p:199 var
binder 13128:13128 <> k:216
R13172:13179 Crypt.package.pkg_notation PackageNotation ::package_scope:'#import'_x_'as'_x_';;'_x not
R13227:13230 Crypt.package.pkg_notation PackageNotation ::package_scope:'#import'_x_'as'_x_';;'_x not
R13236:13251 Crypt.package.pkg_notation PackageNotation ::package_scope:'#import'_x_'as'_x_';;'_x not
binder 13231:13235 <> SOUND:217
R13252:13252 Crypt.package.pkg_notation PackageNotation ::package_scope:''''_x_'←'_x_';;'_x not
R13254:13258 Crypt.package.pkg_notation PackageNotation ::package_scope:''''_x_'←'_x_';;'_x not
R13293:13308 Crypt.package.pkg_notation PackageNotation ::package_scope:''''_x_'←'_x_';;'_x not
R13259:13263 Project.Com <> SOUND:217 var
R13265:13265 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13272:13273 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13292:13292 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13266:13266 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13268:13269 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13271:13271 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13267:13267 Project.Com <> k:216 var
R13270:13270 Project.Com <> c:214 var
R13274:13274 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13281:13282 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13291:13291 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13275:13275 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13277:13278 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13280:13280 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13276:13276 Project.Com <> v:213 var
R13279:13279 Project.Com <> o:212 var
R13283:13283 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13286:13287 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13290:13290 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R13284:13285 Project.Com <> v':211 var
R13288:13289 Project.Com <> o':210 var
binder 13253:13253 <> b:218
binder 13253:13253 <> b:219
R13309:13311 Crypt.package.pkg_core_definition <> ret constr
R13313:13313 Project.Com <> b:218 var
R13180:13184 Crypt.package.pkg_notation PackageNotation ::package_scope:'{'_'sig'_x_'}' not
R13226:13226 Crypt.package.pkg_notation PackageNotation ::package_scope:'{'_'sig'_x_'}' not
R13185:13187 Crypt.package.pkg_notation PackageNotation :pack_op::'#['_x_']'_':'_x_'→'_x not
R13197:13201 Crypt.package.pkg_notation PackageNotation :pack_op::'#['_x_']'_':'_x_'→'_x not
R13216:13220 Crypt.package.pkg_notation PackageNotation :pack_op::'#['_x_']'_':'_x_'→'_x not
R13188:13196 NominalSSP.Example.Sigma.Sigma <> SOUNDNESS def
R13202:13202 Crypt.package.pkg_notation PackageNotation :pack_type::'('_x_')' not
R13215:13215 Crypt.package.pkg_notation PackageNotation :pack_type::'('_x_')' not
R13203:13213 NominalSSP.Example.Sigma.Sigma <> :pack_type::'''soundness'_x not
R13214:13214 Project.Com <> p:199 var
R13214:13214 Project.Com <> p:199 var
R13214:13214 Project.Com <> p:199 var
R13214:13214 Project.Com <> p:199 var
R13221:13225 Crypt.package.pkg_notation PackageNotation :pack_type::'''bool' not
prf 13365:13385 <> Com_Binding_Soundness
binder 13387:13387 <> p:220
R13394:13402 NominalSSP.NomPackage <> adversary abbrev
R13405:13412 Project.Com <> IBinding def
R13415:13424 Project.Com <> sig_to_com def
R13426:13426 Project.Com <> p:220 var
binder 13390:13390 <> A:221
R13516:13518 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13436:13438 NominalSSP.Disjoint <> Adv def
R13441:13452 Project.Com <> Binding_real def
R13455:13464 Project.Com <> sig_to_com def
R13466:13466 Project.Com <> p:220 var
R13487:13491 NominalSSP.Disjoint <> ::sep_scope:x_'∘'_x not
R13471:13484 Project.Com <> Call_Soundness def
R13486:13486 Project.Com <> p:220 var
R13492:13510 NominalSSP.Example.Sigma.Sigma <> Special_Soundness_t def
R13512:13512 Project.Com <> p:220 var
R13515:13515 Project.Com <> A:221 var
R13540:13558 NominalSSP.Disjoint <> share_link_sep_link thm
R13540:13558 NominalSSP.Disjoint <> share_link_sep_link thm
R13540:13558 NominalSSP.Disjoint <> share_link_sep_link thm
R13600:13607 NominalSSP.Disjoint <> Adv_perf thm
R13619:13630 NominalSSP.NomPackage <> module_valid inst
R13600:13607 NominalSSP.Disjoint <> Adv_perf thm
R13619:13630 NominalSSP.NomPackage <> module_valid inst
R13644:13661 Crypt.package.pkg_rhl <> eq_rel_perf_ind_eq thm
R13644:13661 Crypt.package.pkg_rhl <> eq_rel_perf_ind_eq thm
R3720:3722 mathcomp.ssreflect.eqtype <> eqP def
R13715:13724 Crypt.package.pkg_composition <> cast_fun_K thm
R13715:13724 Crypt.package.pkg_composition <> cast_fun_K thm
R13715:13724 Crypt.package.pkg_composition <> cast_fun_K thm
R13794:13803 Crypt.package.pkg_rhl <> rsame_head thm
R13794:13803 Crypt.package.pkg_rhl <> rsame_head thm
R13819:13828 Crypt.package.pkg_rhl <> rsame_head thm
R13819:13828 Crypt.package.pkg_rhl <> rsame_head thm
R13971:13975 Crypt.package.pkg_rhl <> r_ret thm
R13971:13975 Crypt.package.pkg_rhl <> r_ret thm
